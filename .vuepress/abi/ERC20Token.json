{
  "contractName": "ERC20Token",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transferEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "builtOn",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "enableTransfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        },
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "TransferEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OperatorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OperatorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "0x60098054600160a01b61ffff021916905560e0604052602f6080818152906200195860a03980516200003a91600a916020909101906200049d565b503480156200004857600080fd5b506040516200198738038062001987833981018060405260a08110156200006e57600080fd5b8101908080516401000000008111156200008757600080fd5b820160208101848111156200009b57600080fd5b8151640100000000811182820187101715620000b657600080fd5b50509291906020018051640100000000811115620000d357600080fd5b82016020810184811115620000e757600080fd5b81516401000000008111828201871017156200010257600080fd5b5050602080830151604084015160609094015187519396509094509186918691869186918691839187918791879162000141916000918601906200049d565b508151620001579060019060208501906200049d565b506002805460ff191660ff92909216919091179055506200018190503362000227602090811b901c565b8015156200018e57600080fd5b600755620001a33362000279602090811b901c565b600980546001600160a01b0319163317908190556040516001600160a01b0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a380156200021757620002176200020a620002cb60201b60201c565b82620002db60201b60201c565b505050505050505050506200053f565b620002428160066200032e60201b620012c31790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620002948160086200032e60201b620012c31790919060201c565b6040516001600160a01b038216907fac6fa858e9350a46cec16539926e0fde25b7629f84b5a72bffaae4df888ae86d90600090a250565b6009546001600160a01b03165b90565b6007546200030782620002f36200038660201b60201c565b6200038c60201b62000e881790919060201c565b11156200031357600080fd5b6200032a8282620003a660201b620013111760201c565b5050565b6001600160a01b03811615156200034457600080fd5b6200035682826200046560201b60201c565b156200036157600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60055490565b6000828201838110156200039f57600080fd5b9392505050565b6001600160a01b0382161515620003bc57600080fd5b620003d8816005546200038c60201b62000e881790919060201c565b6005556001600160a01b0382166000908152600360209081526040909120546200040d91839062000e886200038c821b17901c565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60006001600160a01b03821615156200047d57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004e057805160ff191683800117855562000510565b8280016001018555821562000510579182015b8281111562000510578251825591602001919060010190620004f3565b506200051e92915062000522565b5090565b620002d891905b808211156200051e576000815560010162000529565b611409806200054f6000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c806379cc67901161011a5780639870d7fe116100ad578063ac8a584a1161007c578063ac8a584a146105a2578063b60b7084146105c8578063dd62ed3e146105d0578063f1b50c1d146105fe578063f2fde38b14610606576101fb565b80639870d7fe146104fe578063a457c2d714610524578063a9059cbb14610550578063aa271e1a1461057c576101fb565b80638f32d59b116100e95780638f32d59b146104c057806395d89b41146104c8578063983b2d56146104d057806398650275146104f6576101fb565b806379cc67901461043c5780637d64bcb4146104685780638980f11f146104705780638da5cb5b1461049c576101fb565b8063355274ea116101925780634cd412d5116101615780634cd412d5146103e05780636d70f7ae146103e857806370a082311461040e578063715018a614610434576101fb565b8063355274ea14610363578063395093511461036b57806340c10f191461039757806342966c68146103c3576101fb565b806323b872dd116101ce57806323b872dd146102df5780632ab6f8db146103155780633092afd51461031f578063313ce56714610345576101fb565b806305d2035b1461020057806306fdde031461021c578063095ea7b31461029957806318160ddd146102c5575b600080fd5b61020861062c565b604080519115158252519081900360200190f35b61022461063c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561025e578181015183820152602001610246565b50505050905090810190601f16801561028b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610208600480360360408110156102af57600080fd5b506001600160a01b0381351690602001356106d2565b6102cd61073e565b60408051918252519081900360200190f35b610208600480360360608110156102f557600080fd5b506001600160a01b03813581169160208101359091169060400135610744565b61031d610784565b005b61031d6004803603602081101561033557600080fd5b50356001600160a01b031661078f565b61034d6107ae565b6040805160ff9092168252519081900360200190f35b6102cd6107b7565b6102086004803603604081101561038157600080fd5b506001600160a01b0381351690602001356107bd565b610208600480360360408110156103ad57600080fd5b506001600160a01b03813516906020013561085b565b61031d600480360360208110156103d957600080fd5b5035610886565b610208610890565b610208600480360360208110156103fe57600080fd5b50356001600160a01b03166108a0565b6102cd6004803603602081101561042457600080fd5b50356001600160a01b03166108b9565b61031d6108d4565b61031d6004803603604081101561045257600080fd5b506001600160a01b038135169060200135610931565b61031d61093f565b61031d6004803603604081101561048657600080fd5b506001600160a01b0381351690602001356109f3565b6104a4610a9d565b604080516001600160a01b039092168252519081900360200190f35b610208610aac565b610224610abd565b61031d600480360360208110156104e657600080fd5b50356001600160a01b0316610b1d565b61031d610b3a565b61031d6004803603602081101561051457600080fd5b50356001600160a01b0316610b43565b6102086004803603604081101561053a57600080fd5b506001600160a01b038135169060200135610b60565b6102086004803603604081101561056657600080fd5b506001600160a01b038135169060200135610bab565b6102086004803603602081101561059257600080fd5b50356001600160a01b0316610be9565b61031d600480360360208110156105b857600080fd5b50356001600160a01b0316610bfc565b610224610c18565b6102cd600480360360408110156105e657600080fd5b506001600160a01b0381358116916020013516610ca6565b61031d610cd1565b61031d6004803603602081101561061c57600080fd5b50356001600160a01b0316610d25565b600954600160a01b900460ff1690565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106c85780601f1061069d576101008083540402835291602001916106c8565b820191906000526020600020905b8154815290600101906020018083116106ab57829003601f168201915b5050505050905090565b60006001600160a01b03831615156106e957600080fd5b3360008181526004602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293926000805160206113be833981519152929181900390910190a350600192915050565b60055490565b6009546000908490600160a81b900460ff16806107655750610765816108a0565b151561077057600080fd5b61077b858585610d41565b95945050505050565b61078d33610df8565b565b610797610aac565b15156107a257600080fd5b6107ab81610e40565b50565b60025460ff1690565b60075490565b60006001600160a01b03831615156107d457600080fd5b3360009081526004602090815260408083206001600160a01b0387168452909152902054610808908363ffffffff610e8816565b3360008181526004602090815260408083206001600160a01b0389168085529083529281902085905580519485525191936000805160206113be833981519152929081900390910190a350600192915050565b600954600090600160a01b900460ff161561087557600080fd5b61087f8383610e9a565b9392505050565b6107ab3382610ec3565b600954600160a81b900460ff1690565b60006108b360088363ffffffff610f6e16565b92915050565b6001600160a01b031660009081526003602052604090205490565b6108dc610aac565b15156108e757600080fd5b6009546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600980546001600160a01b0319169055565b61093b8282610fa5565b5050565b610947610aac565b151561095257600080fd5b600954600160a01b900460ff161561096957600080fd5b60098054600160a81b60ff021974ff000000000000000000000000000000000000000019909116600160a01b1716600160a81b1790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a16040517f75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d90600090a1565b6109fb610aac565b1515610a0657600080fd5b816001600160a01b031663a9059cbb610a1d610a9d565b836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610a6d57600080fd5b505af1158015610a81573d6000803e3d6000fd5b505050506040513d6020811015610a9757600080fd5b50505050565b6009546001600160a01b031690565b6009546001600160a01b0316331490565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156106c85780601f1061069d576101008083540402835291602001916106c8565b610b2633610be9565b1515610b3157600080fd5b6107ab81611055565b61078d33610e40565b610b4c336108a0565b1515610b5757600080fd5b6107ab8161109d565b60006001600160a01b0383161515610b7757600080fd5b3360009081526004602090815260408083206001600160a01b0387168452909152902054610808908363ffffffff6110e516565b6009546000903390600160a81b900460ff1680610bcc5750610bcc816108a0565b1515610bd757600080fd5b610be184846110fa565b949350505050565b60006108b360068363ffffffff610f6e16565b610c04610aac565b1515610c0f57600080fd5b6107ab81610df8565b600a805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610c9e5780601f10610c7357610100808354040283529160200191610c9e565b820191906000526020600020905b815481529060010190602001808311610c8157829003601f168201915b505050505081565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b610cd9610aac565b1515610ce457600080fd5b60098054600160a81b60ff021916600160a81b1790556040517f75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d90600090a1565b610d2d610aac565b1515610d3857600080fd5b6107ab81611107565b6001600160a01b0383166000908152600460209081526040808320338452909152812054610d75908363ffffffff6110e516565b6001600160a01b0385166000908152600460209081526040808320338452909152902055610da4848484611178565b6001600160a01b0384166000818152600460209081526040808320338085529083529281902054815190815290519293926000805160206113be833981519152929181900390910190a35060019392505050565b610e0960088263ffffffff61124716565b6040516001600160a01b038216907f80c0b871b97b595b16a7741c1b06fed0c6f6f558639f18ccbce50724325dc40d90600090a250565b610e5160068263ffffffff61124716565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60008282018381101561087f57600080fd5b6000610ea533610be9565b1515610eb057600080fd5b610eba8383611293565b50600192915050565b6001600160a01b0382161515610ed857600080fd5b600554610eeb908263ffffffff6110e516565b6005556001600160a01b038216600090815260036020526040902054610f17908263ffffffff6110e516565b6001600160a01b0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b60006001600160a01b0382161515610f8557600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b0382166000908152600460209081526040808320338452909152902054610fd9908263ffffffff6110e516565b6001600160a01b03831660009081526004602090815260408083203384529091529020556110078282610ec3565b6001600160a01b0382166000818152600460209081526040808320338085529083529281902054815190815290519293926000805160206113be833981519152929181900390910190a35050565b61106660068263ffffffff6112c316565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6110ae60088263ffffffff6112c316565b6040516001600160a01b038216907fac6fa858e9350a46cec16539926e0fde25b7629f84b5a72bffaae4df888ae86d90600090a250565b6000828211156110f457600080fd5b50900390565b6000610eba338484611178565b6001600160a01b038116151561111c57600080fd5b6009546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216151561118d57600080fd5b6001600160a01b0383166000908152600360205260409020546111b6908263ffffffff6110e516565b6001600160a01b0380851660009081526003602052604080822093909355908416815220546111eb908263ffffffff610e8816565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b038116151561125c57600080fd5b6112668282610f6e565b151561127157600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6007546112ae826112a261073e565b9063ffffffff610e8816565b11156112b957600080fd5b61093b8282611311565b6001600160a01b03811615156112d857600080fd5b6112e28282610f6e565b156112ec57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b038216151561132657600080fd5b600554611339908263ffffffff610e8816565b6005556001600160a01b038216600090815260036020526040902054611365908263ffffffff610e8816565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a72305820d8df8d679e97765c732a7aac897e50a7965edaeea23dd86bc71b64d417ab84b9002968747470733a2f2f766974746f6d696e61636f72692e6769746875622e696f2f65726332302d67656e657261746f72",
  "deployedBytecode": "",
  "sourceMap": "683:37:4:-;;;-1:-1:-1;;;;;;767:37:4;;;268:73:0;223:407;268:73;;223:407;268:73;;;223:407;268:73;;;;;;;;;;;;;;;:::i;:::-;;348:240;8:9:-1;5:2;;;30:1;27;20:12;5:2;348:240:0;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;348:240:0;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;348:240:0;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;348:240:0;;;;;;;;;;;;;;493:12:12;;348:240:0;;-1:-1:-1;348:240:0;;-1:-1:-1;348:240:0;538:4;;348:240;;;;;;;;;;538:4;;348:240;;;;493:12:12;;:5;;:12;;;;:::i;:::-;-1:-1:-1;515:16:12;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:12;:20;;-1:-1:-1;;541:20:12;;;;;;;;;;;;-1:-1:-1;275:22:6;;-1:-1:-1;286:10:6;275;;;;;:22;;:::i;:::-;250:7:11;;;242:16;;;;;;268:4;:10;318:24:3;331:10;318:12;;;;;:24;;:::i;:::-;515:6:8;:19;;-1:-1:-1;;;;;;515:19:8;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:8;;;;;515;;549:40;;515:6;;549:40;1774:17:4;;1770:77;;1807:29;1813:7;:5;;;:7;;:::i;:::-;1822:13;1807:5;;;:29;;:::i;:::-;1518:335;;;;;348:240:0;;;;;223:407;;685:119:6;741:21;754:7;741:8;:12;;;;;;:21;;;;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:6;;;;;;;;685:119;:::o;748:125:3:-;806:23;821:7;806:10;:14;;;;;;:23;;;;:::i;:::-;844:22;;-1:-1:-1;;;;;844:22:3;;;;;;;;748:125;:::o;659:77:8:-;723:6;;-1:-1:-1;;;;;723:6:8;659:77;;:::o;432:151:11:-;534:4;;506:24;524:5;506:13;:11;;;:13;;:::i;:::-;:17;;;;;;:24;;;;:::i;:::-;:32;;498:41;;;;;;549:27;561:7;570:5;549:11;;;;;:27;;:::i;:::-;432:151;;:::o;259:181:5:-;-1:-1:-1;;;;;335:21:5;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;936:89:9:-;1006:12;;936:89;:::o;1431:145:7:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:7:o;6198:263:9:-;-1:-1:-1;;;;;6272:21:9;;;;6264:30;;;;;;6320:23;6337:5;6320:12;;:16;;;;;;:23;;;;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:9;;;;;;:9;:18;;;;;;;;;:29;;6397:5;;6374:22;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;6353:18:9;;;;;;:9;:18;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;;;6418:36;;;;;;;;;;6198:263;;:::o;786:162:5:-;858:4;-1:-1:-1;;;;;882:21:5;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;223:407:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;223:407:0;;;-1:-1:-1;223:407:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "223:407:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;223:407:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1920:94:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;628:81:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:238:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2735:238:9;;;;;;;;:::i;936:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;2449:162:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2449:162:4;;;;;;;;;;;;;;;;;:::i;663:79:3:-;;;:::i;:::-;;3395:95:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3395:95:4;-1:-1:-1;;;;;3395:95:4;;:::i;930:81:12:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;353:73:11;;;:::i;4233:317:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:9;;;;;;;;:::i;2181:116:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2181:116:4;;;;;;;;:::i;295:77:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;295:77:10;;:::i;2081:94:4:-;;;:::i;444:111:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;444:111:3;-1:-1:-1;;;;;444:111:3;;:::i;1234:104:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:9;-1:-1:-1;;;;;1234:104:9;;:::i;1347:137:8:-;;;:::i;624:93:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;624:93:10;;;;;;;;:::i;2681:185:4:-;;;:::i;596:150:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;596:150:2;;;;;;;;:::i;659:77:8:-;;;:::i;:::-;;;;-1:-1:-1;;;;;659:77:8;;;;;;;;;;;;;;979:90;;;:::i;771:85:12:-;;;:::i;508:90:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:6;-1:-1:-1;;;;;508:90:6;;:::i;604:75::-;;;:::i;561:96:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;561:96:3;-1:-1:-1;;;;;561:96:3;;:::i;5058:327:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:9;;;;;;;;:::i;2303:140:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2303:140:4;;;;;;;;:::i;395:107:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:6;-1:-1:-1;;;;;395:107:6;;:::i;3170:99:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3170:99:4;-1:-1:-1;;;;;3170:99:4;;:::i;268:73:0:-;;;:::i;1669:129:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1669:129:9;;;;;;;;;;:::i;2926:116:4:-;;;:::i;1655:107:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:8;-1:-1:-1;;;;;1655:107:8;;:::i;1920:94:4:-;1991:16;;-1:-1:-1;;;1991:16:4;;;;;1920:94::o;628:81:12:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2735:238:9:-;2800:4;-1:-1:-1;;;;;2824:21:9;;;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:9;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;-1:-1:-1;;;;;;;;;;;2909:36:9;;;;;;;;;;-1:-1:-1;2962:4:9;2735:238;;;;:::o;936:89::-;1006:12;;936:89;:::o;2449:162:4:-;1135:16;;2546:4;;2531;;-1:-1:-1;;;1135:16:4;;;;;:36;;;1155:16;1166:4;1155:10;:16::i;:::-;1127:45;;;;;;;;2569:35;2588:4;2594:2;2598:5;2569:18;:35::i;:::-;2562:42;2449:162;-1:-1:-1;;;;;2449:162:4:o;663:79:3:-;708:27;724:10;708:15;:27::i;:::-;663:79::o;3395:95:4:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;;;3461:22:4;3475:7;3461:13;:22::i;:::-;3395:95;:::o;930:81:12:-;995:9;;;;930:81;:::o;353:73:11:-;415:4;;353:73;:::o;4233:317:9:-;4313:4;-1:-1:-1;;;;;4337:21:9;;;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:9;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:9;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;-1:-1:-1;;;;;;;;;;;4462:60:9;;;;;;;;;;-1:-1:-1;4539:4:9;4233:317;;;;:::o;2181:116:4:-;927:16;;2246:4;;-1:-1:-1;;;927:16:4;;;;926:17;918:26;;;;;;2269:21;2280:2;2284:5;2269:10;:21::i;:::-;2262:28;2181:116;-1:-1:-1;;;2181:116:4:o;295:77:10:-;341:24;347:10;359:5;341;:24::i;2081:94:4:-;2152:16;;-1:-1:-1;;;2152:16:4;;;;;2081:94::o;444:111:3:-;502:4;525:23;:10;540:7;525:23;:14;:23;:::i;:::-;518:30;444:111;-1:-1:-1;;444:111:3:o;1234:104:9:-;-1:-1:-1;;;;;1315:16:9;1289:7;1315:16;;;:9;:16;;;;;;;1234:104::o;1347:137:8:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1429:6;;1408:40;;1445:1;;-1:-1:-1;;;;;1429:6:8;;1408:40;;1445:1;;1408:40;1458:6;:19;;-1:-1:-1;;;;;;1458:19:8;;;1347:137::o;624:93:10:-;688:22;698:4;704:5;688:9;:22::i;:::-;624:93;;:::o;2681:185:4:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;;;927:16:4;;-1:-1:-1;;;927:16:4;;;;926:17;918:26;;;;;;2741:16;:23;;-1:-1:-1;;;;;;;;2741:23:4;;;-1:-1:-1;;;2741:23:4;2774;-1:-1:-1;;;2774:23:4;;;2813:14;;;;2741:23;;2813:14;2842:17;;;;;;;2681:185::o;596:150:2:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;;;695:12:2;-1:-1:-1;;;;;688:29:2;;718:7;:5;:7::i;:::-;727:11;688:51;;;;;;;;;;;;;-1:-1:-1;;;;;688:51:2;-1:-1:-1;;;;;688:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;688:51:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;688:51:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;596:150:2:o;659:77:8:-;723:6;;-1:-1:-1;;;;;723:6:8;659:77;:::o;979:90::-;1056:6;;-1:-1:-1;;;;;1056:6:8;1042:10;:20;;979:90::o;771:85:12:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;508:90:6;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;604:75::-;647:25;661:10;647:13;:25::i;561:96:3:-;397:22;408:10;397;:22::i;:::-;389:31;;;;;;;;629:21;642:7;629:12;:21::i;5058:327:9:-;5143:4;-1:-1:-1;;;;;5167:21:9;;;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:9;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;2303:140:4:-;1135:16;;2388:4;;2367:10;;-1:-1:-1;;;1135:16:4;;;;;:36;;;1155:16;1166:4;1155:10;:16::i;:::-;1127:45;;;;;;;;2411:25;2426:2;2430:5;2411:14;:25::i;:::-;2404:32;2303:140;-1:-1:-1;;;;2303:140:4:o;395:107:6:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;3170:99:4:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;;;3238:24:4;3254:7;3238:15;:24::i;268:73:0:-;;;;;;;;;;;;;;;-1:-1:-1;;268:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1669:129:9:-;-1:-1:-1;;;;;1767:15:9;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;2926:116:4:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;;;2979:16:4;:23;;-1:-1:-1;;;;;;2979:23:4;-1:-1:-1;;;2979:23:4;;;3018:17;;;;2979:23;;3018:17;2926:116::o;1655:107:8:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;3436:294:9:-;-1:-1:-1;;;;;3560:14:9;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:9;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:9;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;-1:-1:-1;;;;;;;;;;;3648:54:9;;;;;;;;;;-1:-1:-1;3719:4:9;3436:294;;;;;:::o;879:133:3:-;940:26;:10;958:7;940:26;:17;:26;:::i;:::-;981:24;;-1:-1:-1;;;;;981:24:3;;;;;;;;879:133;:::o;810:127:6:-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:6;;;;;;;;810:127;:::o;1431:145:7:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;443:128:13;511:4;350:20:6;359:10;350:8;:20::i;:::-;342:29;;;;;;;;527:16:13;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:13;443:128;;;;:::o;6687:263:9:-;-1:-1:-1;;;;;6761:21:9;;;;6753:30;;;;;;6809:12;;:23;;6826:5;6809:23;:16;:23;:::i;:::-;6794:12;:38;-1:-1:-1;;;;;6863:18:9;;;;;;:9;:18;;;;;;:29;;6886:5;6863:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6842:18:9;;;;;;:9;:18;;;;;;;;:50;;;;6907:36;;;;;;;6842:18;;6907:36;;;;;;;;;;;6687:263;;:::o;786:162:5:-;858:4;-1:-1:-1;;;;;882:21:5;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;7339:255:9:-;-1:-1:-1;;;;;7441:17:9;;;;;;:8;:17;;;;;;;;7459:10;7441:29;;;;;;;;:40;;7475:5;7441:40;:33;:40;:::i;:::-;-1:-1:-1;;;;;7409:17:9;;;;;;:8;:17;;;;;;;;7427:10;7409:29;;;;;;;:72;7491:21;7418:7;7506:5;7491;:21::i;:::-;-1:-1:-1;;;;;7527:60:9;;7557:17;;;;:8;:17;;;;;;;;7545:10;7557:29;;;;;;;;;;;7527:60;;;;;;;7545:10;;7527:60;-1:-1:-1;;;;;;;;;;;7527:60:9;;;;;;;;;;7339:255;;:::o;685:119:6:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:6;;;;;;;;685:119;:::o;748:125:3:-;806:23;:10;821:7;806:23;:14;:23;:::i;:::-;844:22;;-1:-1:-1;;;;;844:22:3;;;;;;;;748:125;:::o;1205:145:7:-;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:7;;;1205:145::o;1962:137:9:-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;1906:183:8:-;-1:-1:-1;;;;;1979:22:8;;;;1971:31;;;;;;2038:6;;2017:38;;-1:-1:-1;;;;;2017:38:8;;;;2038:6;;2017:38;;2038:6;;2017:38;2065:6;:17;;-1:-1:-1;;;;;;2065:17:8;-1:-1:-1;;;;;2065:17:8;;;;;;;;;;1906:183::o;5599:256:9:-;-1:-1:-1;;;;;5686:16:9;;;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:9;;;;;;:9;:15;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:9;;;;;;;:9;:15;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:9;;;;;;;:9;:13;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o;514:184:5:-;-1:-1:-1;;;;;593:21:5;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:5;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:5;;;514:184::o;432:151:11:-;534:4;;506:24;524:5;506:13;:11;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;:32;;498:41;;;;;;549:27;561:7;570:5;549:11;:27::i;259:181:5:-;-1:-1:-1;;;;;335:21:5;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;6198:263:9:-;-1:-1:-1;;;;;6272:21:9;;;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:23;:16;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:9;;;;;;:9;:18;;;;;;:29;;6397:5;6374:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:9;;;;;;:9;:18;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;;;6418:36;;;;;;;;;;6198:263;;:::o",
  "source": "pragma solidity ^0.5.5;\n\nimport \"ico-maker/contracts/token/ERC20/BaseERC20Token.sol\";\n\n/**\n * @title ERC20Token\n * @author Vittorio Minacori (https://github.com/vittominacori)\n * @dev Implementation of a BaseERC20Token\n */\ncontract ERC20Token is BaseERC20Token {\n\n    string public builtOn = \"https://vittominacori.github.io/erc20-generator\";\n\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals,\n        uint256 cap,\n        uint256 initialSupply\n    )\n        public\n        BaseERC20Token(name, symbol, decimals, cap, initialSupply)\n    {} // solhint-disable-line no-empty-blocks\n}\n",
  "sourcePath": "/Users/vittominacori/Projects/vittominacori.github.io/erc20-generator/erc20-generator-smartcontracts/contracts/ERC20Token.sol",
  "ast": {
    "absolutePath": "/Users/vittominacori/Projects/vittominacori.github.io/erc20-generator/erc20-generator-smartcontracts/contracts/ERC20Token.sol",
    "exportedSymbols": {
      "ERC20Token": [
        29
      ]
    },
    "id": 30,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "ico-maker/contracts/token/ERC20/BaseERC20Token.sol",
        "file": "ico-maker/contracts/token/ERC20/BaseERC20Token.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 30,
        "sourceUnit": 397,
        "src": "25:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "BaseERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 396,
              "src": "246:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseERC20Token_$396",
                "typeString": "contract BaseERC20Token"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "246:14:0"
          }
        ],
        "contractDependencies": [
          74,
          177,
          396,
          593,
          830,
          1262,
          1293,
          1350,
          1408,
          1436,
          1505
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Token\n@author Vittorio Minacori (https://github.com/vittominacori)\n@dev Implementation of a BaseERC20Token",
        "fullyImplemented": true,
        "id": 29,
        "linearizedBaseContracts": [
          29,
          396,
          74,
          830,
          177,
          1293,
          1350,
          1436,
          593,
          1262,
          1408,
          1505
        ],
        "name": "ERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "builtOn",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "268:73:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "268:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "68747470733a2f2f766974746f6d696e61636f72692e6769746875622e696f2f65726332302d67656e657261746f72",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "292:49:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d699d94e432732754321d065f2307365908e9ae0fe6e1ba925fd83c3d2369543",
                "typeString": "literal_string \"https://vittominacori.github.io/erc20-generator\""
              },
              "value": "https://vittominacori.github.io/erc20-generator"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "586:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 20,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "538:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 21,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "544:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 22,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "552:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "562:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24,
                    "name": "initialSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "567:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 25,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19,
                  "name": "BaseERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 396,
                  "src": "523:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BaseERC20Token_$396_$",
                    "typeString": "type(contract BaseERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "523:58:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "369:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "397:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "427:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "451:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "472:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "359:140:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:0:0"
            },
            "scope": 29,
            "src": "348:240:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 30,
        "src": "223:407:0"
      }
    ],
    "src": "0:631:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/vittominacori/Projects/vittominacori.github.io/erc20-generator/erc20-generator-smartcontracts/contracts/ERC20Token.sol",
    "exportedSymbols": {
      "ERC20Token": [
        29
      ]
    },
    "id": 30,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "ico-maker/contracts/token/ERC20/BaseERC20Token.sol",
        "file": "ico-maker/contracts/token/ERC20/BaseERC20Token.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 30,
        "sourceUnit": 397,
        "src": "25:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "BaseERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 396,
              "src": "246:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseERC20Token_$396",
                "typeString": "contract BaseERC20Token"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "246:14:0"
          }
        ],
        "contractDependencies": [
          74,
          177,
          396,
          593,
          830,
          1262,
          1293,
          1350,
          1408,
          1436,
          1505
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Token\n@author Vittorio Minacori (https://github.com/vittominacori)\n@dev Implementation of a BaseERC20Token",
        "fullyImplemented": true,
        "id": 29,
        "linearizedBaseContracts": [
          29,
          396,
          74,
          830,
          177,
          1293,
          1350,
          1436,
          593,
          1262,
          1408,
          1505
        ],
        "name": "ERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "builtOn",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "268:73:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "268:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "68747470733a2f2f766974746f6d696e61636f72692e6769746875622e696f2f65726332302d67656e657261746f72",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "292:49:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d699d94e432732754321d065f2307365908e9ae0fe6e1ba925fd83c3d2369543",
                "typeString": "literal_string \"https://vittominacori.github.io/erc20-generator\""
              },
              "value": "https://vittominacori.github.io/erc20-generator"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "586:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 20,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "538:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 21,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "544:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 22,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "552:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "562:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24,
                    "name": "initialSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "567:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 25,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19,
                  "name": "BaseERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 396,
                  "src": "523:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BaseERC20Token_$396_$",
                    "typeString": "type(contract BaseERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "523:58:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "369:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "397:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "427:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "451:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "472:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "359:140:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:0:0"
            },
            "scope": 29,
            "src": "348:240:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 30,
        "src": "223:407:0"
      }
    ],
    "src": "0:631:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-10T18:59:32.815Z",
  "devdoc": {
    "author": "Vittorio Minacori (https://github.com/vittominacori)",
    "details": "Implementation of a BaseERC20Token",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "cap()": {
        "return": "the cap for the token minting."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "enableTransfer()": {
        "details": "Function to enable transfers."
      },
      "finishMinting()": {
        "details": "Function to stop minting new tokens"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mintingFinished()": {
        "return": "if minting is finished or not"
      },
      "name()": {
        "return": "the name of the token."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "recoverERC20(address,uint256)": {
        "details": "Remember that only owner can call so be careful when use on contracts generated from other contracts.",
        "params": {
          "tokenAddress": "The token contract address",
          "tokenAmount": "Number of tokens to be sent"
        }
      },
      "removeMinter(address)": {
        "details": "remove the `minter` role from address",
        "params": {
          "account": "Address you want to remove role"
        }
      },
      "removeOperator(address)": {
        "details": "remove the `operator` role from address",
        "params": {
          "account": "Address you want to remove role"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transferEnabled()": {
        "return": "if transfer is enabled or not"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "ERC20Token"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}