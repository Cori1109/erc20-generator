{
  "contractName": "ERC20Token",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transferEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "builtOn",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "enableTransfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        },
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "TransferEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OperatorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OperatorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"builtOn\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"},{\"name\":\"cap\",\"type\":\"uint256\"},{\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TransferEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OperatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OperatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Vittorio Minacori (https://github.com/vittominacori)\",\"details\":\"Implementation of a BaseERC20Token\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"value\":\"The amount of token to be burned.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns a specific amount of tokens from the target address and decrements allowance\",\"params\":{\"from\":\"address The account whose tokens will be burned.\",\"value\":\"uint256 The amount of token to be burned.\"}},\"cap()\":{\"return\":\"the cap for the token minting.\"},\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"enableTransfer()\":{\"details\":\"Function to enable transfers.\"},\"finishMinting()\":{\"details\":\"Function to stop minting new tokens and enable transfer.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"mintingFinished()\":{\"return\":\"if minting is finished or not.\"},\"name()\":{\"return\":\"the name of the token.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"recoverERC20(address,uint256)\":{\"details\":\"Remember that only owner can call so be careful when use on contracts generated from other contracts.\",\"params\":{\"tokenAddress\":\"The token contract address\",\"tokenAmount\":\"Number of tokens to be sent\"}},\"removeMinter(address)\":{\"details\":\"remove the `minter` role from address\",\"params\":{\"account\":\"Address you want to remove role\"}},\"removeOperator(address)\":{\"details\":\"remove the `operator` role from address\",\"params\":{\"account\":\"Address you want to remove role\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"symbol()\":{\"return\":\"the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"transferEnabled()\":{\"return\":\"if transfer is enabled or not.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"ERC20Token\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/vittominacori/Projects/vittominacori.github.io/erc20-generator/erc20-generator-smartcontracts/contracts/ERC20Token.sol\":\"ERC20Token\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/vittominacori/Projects/vittominacori.github.io/erc20-generator/erc20-generator-smartcontracts/contracts/ERC20Token.sol\":{\"keccak256\":\"0x62083927b049d1daa1f269bcfeca0bd53b1ba44adc595bf4f6b9b50a3ee18a76\",\"urls\":[\"bzzr://aef5985d2ce5582f037d8768d5261260444e5cc2f322265b376441284e7eb35b\"]},\"eth-token-recover/contracts/TokenRecover.sol\":{\"keccak256\":\"0xb6e5871de4eca1c698465e91b3a64fe9b1a328aac1fe5e2e196bda73086081ec\",\"urls\":[\"bzzr://76a458090b93c68bb5a974a1d5c3c1e05f9aa7bd6d96aa855a16ea227533e14c\"]},\"ico-maker/contracts/access/roles/OperatorRole.sol\":{\"keccak256\":\"0x01f4fd70f8fc5a77f84d341550b3485ea45816d8325adbcf4d8e2ded9f30676f\",\"urls\":[\"bzzr://13d59916b45dae9f5da7973b4557319297a4a6e654db4f1e522a2c303e75529c\"]},\"ico-maker/contracts/token/ERC20/BaseERC20Token.sol\":{\"keccak256\":\"0x9b994ee9e8fbabab6787e25c262ef221b114393d09886333d982a40b0dc9bd75\",\"urls\":[\"bzzr://30b7a90ac032a9d940e9a4f7362a305ee184fc4f085761c4322cf14d94d1d26e\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\",\"urls\":[\"bzzr://da472135eb9268d863825ea26e227a9f8980c54bd32e0764d61711acca59fc89\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x317b01d5df6753f57244b354d0a23d5055b293f3fa22693c2ff7906cc988ce97\",\"urls\":[\"bzzr://d3f08352c241a34db9b244c5fb569c7ffb3dcd1a0aa288c855a4a70eddb9e2a3\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411\",\"urls\":[\"bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xcf6b3e804a9b1e3d6ca4a695524cbaa52cd26cc86978a2b99052ba1a5d25653f\",\"urls\":[\"bzzr://8f763f9e6a0cdf1b7f07be575b3d4011e18a672b1365e26634e03580761e6858\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Capped.sol\":{\"keccak256\":\"0xe2685e6c947e69b46a8124a1f5e18cf5210ca2b90c7b2019a9c30281ecbee328\",\"urls\":[\"bzzr://b0c7e5a0136350430a915a7cfcfd9827d2251f02debc3cb1957a62c4f746d3b9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xa60f7f7ce98ca2d75c8e02da982d3fe91176269fdab2589bbbb7cc65f2d7c9d3\",\"urls\":[\"bzzr://5edd2c9be304a1e8ed055e243daba5345f242008164f9a0565c33197b860323b\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xd7956aed5535d9563bef5482c6fc41894aed3352aab764b3397bbc33dc2de0ea\",\"urls\":[\"bzzr://77acda78fc09e0be0c1954db02a97bed0f211618be5153ad5aed0bc0cf13f778\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]}},\"version\":1}",
  "bytecode": "0x60098054600160a01b61ffff021916905560e0604052602f608081815290620017f860a03980516200003a91600a9160209091019062000498565b503480156200004857600080fd5b506040516200182738038062001827833981018060405260a08110156200006e57600080fd5b8101908080516401000000008111156200008757600080fd5b820160208101848111156200009b57600080fd5b8151640100000000811182820187101715620000b657600080fd5b50509291906020018051640100000000811115620000d357600080fd5b82016020810184811115620000e757600080fd5b81516401000000008111828201871017156200010257600080fd5b50506020808301516040840151606090940151875193965090945091869186918691869186918391879187918791620001419160009186019062000498565b5081516200015790600190602085019062000498565b506002805460ff191660ff92909216919091179055506200018190503362000228602090811b901c565b600081116200018f57600080fd5b600755620001a4336200027a602090811b901c565b600980546001600160a01b0319163317908190556040516001600160a01b0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a380156200021857620002186200020b620002cc60201b60201c565b82620002dc60201b60201c565b505050505050505050506200053a565b620002438160066200032f60201b6200118c1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b620002958160086200032f60201b6200118c1790919060201c565b6040516001600160a01b038216907fac6fa858e9350a46cec16539926e0fde25b7629f84b5a72bffaae4df888ae86d90600090a250565b6009546001600160a01b03165b90565b6007546200030882620002f46200038560201b60201c565b6200038b60201b62000dd31790919060201c565b11156200031457600080fd5b6200032b8282620003a560201b620011d81760201c565b5050565b6001600160a01b0381166200034357600080fd5b6200035582826200046260201b60201c565b156200036057600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60055490565b6000828201838110156200039e57600080fd5b9392505050565b6001600160a01b038216620003b957600080fd5b620003d5816005546200038b60201b62000dd31790919060201c565b6005556001600160a01b0382166000908152600360209081526040909120546200040a91839062000dd36200038b821b17901c565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60006001600160a01b0382166200047857600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004db57805160ff19168380011785556200050b565b828001600101855582156200050b579182015b828111156200050b578251825591602001919060010190620004ee565b50620005199291506200051d565b5090565b620002d991905b8082111562000519576000815560010162000524565b6112ae806200054a6000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c806379cc67901161011a5780639870d7fe116100ad578063ac8a584a1161007c578063ac8a584a146105a2578063b60b7084146105c8578063dd62ed3e146105d0578063f1b50c1d146105fe578063f2fde38b14610606576101fb565b80639870d7fe146104fe578063a457c2d714610524578063a9059cbb14610550578063aa271e1a1461057c576101fb565b80638f32d59b116100e95780638f32d59b146104c057806395d89b41146104c8578063983b2d56146104d057806398650275146104f6576101fb565b806379cc67901461043c5780637d64bcb4146104685780638980f11f146104705780638da5cb5b1461049c576101fb565b8063355274ea116101925780634cd412d5116101615780634cd412d5146103e05780636d70f7ae146103e857806370a082311461040e578063715018a614610434576101fb565b8063355274ea14610363578063395093511461036b57806340c10f191461039757806342966c68146103c3576101fb565b806323b872dd116101ce57806323b872dd146102df5780632ab6f8db146103155780633092afd51461031f578063313ce56714610345576101fb565b806305d2035b1461020057806306fdde031461021c578063095ea7b31461029957806318160ddd146102c5575b600080fd5b61020861062c565b604080519115158252519081900360200190f35b61022461063c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561025e578181015183820152602001610246565b50505050905090810190601f16801561028b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610208600480360360408110156102af57600080fd5b506001600160a01b0381351690602001356106d2565b6102cd6106e8565b60408051918252519081900360200190f35b610208600480360360608110156102f557600080fd5b506001600160a01b038135811691602081013590911690604001356106ee565b61031d61072c565b005b61031d6004803603602081101561033557600080fd5b50356001600160a01b0316610737565b61034d610754565b6040805160ff9092168252519081900360200190f35b6102cd61075d565b6102086004803603604081101561038157600080fd5b506001600160a01b038135169060200135610763565b610208600480360360408110156103ad57600080fd5b506001600160a01b0381351690602001356107a4565b61031d600480360360208110156103d957600080fd5b50356107cf565b6102086107d9565b610208600480360360208110156103fe57600080fd5b50356001600160a01b03166107e9565b6102cd6004803603602081101561042457600080fd5b50356001600160a01b0316610802565b61031d61081d565b61031d6004803603604081101561045257600080fd5b506001600160a01b038135169060200135610878565b61031d610886565b61031d6004803603604081101561048657600080fd5b506001600160a01b038135169060200135610938565b6104a46109e0565b604080516001600160a01b039092168252519081900360200190f35b6102086109ef565b610224610a00565b61031d600480360360208110156104e657600080fd5b50356001600160a01b0316610a60565b61031d610a7b565b61031d6004803603602081101561051457600080fd5b50356001600160a01b0316610a84565b6102086004803603604081101561053a57600080fd5b506001600160a01b038135169060200135610a9f565b6102086004803603604081101561056657600080fd5b506001600160a01b038135169060200135610adb565b6102086004803603602081101561059257600080fd5b50356001600160a01b0316610b17565b61031d600480360360208110156105b857600080fd5b50356001600160a01b0316610b2a565b610224610b44565b6102cd600480360360408110156105e657600080fd5b506001600160a01b0381358116916020013516610bd2565b61031d610bfd565b61031d6004803603602081101561061c57600080fd5b50356001600160a01b0316610c4f565b600954600160a01b900460ff1690565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106c85780601f1061069d576101008083540402835291602001916106c8565b820191906000526020600020905b8154815290600101906020018083116106ab57829003601f168201915b5050505050905090565b60006106df338484610c69565b50600192915050565b60055490565b6009546000908490600160a81b900460ff168061070f575061070f816107e9565b61071857600080fd5b610723858585610cf1565b95945050505050565b61073533610d43565b565b61073f6109ef565b61074857600080fd5b61075181610d8b565b50565b60025460ff1690565b60075490565b3360008181526004602090815260408083206001600160a01b038716845290915281205490916106df91859061079f908663ffffffff610dd316565b610c69565b600954600090600160a01b900460ff16156107be57600080fd5b6107c88383610de5565b9392505050565b6107513382610e03565b600954600160a81b900460ff1690565b60006107fc60088363ffffffff610eac16565b92915050565b6001600160a01b031660009081526003602052604090205490565b6108256109ef565b61082e57600080fd5b6009546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600980546001600160a01b0319169055565b6108828282610ee1565b5050565b61088e6109ef565b61089757600080fd5b600954600160a01b900460ff16156108ae57600080fd5b60098054600160a81b60ff021974ff000000000000000000000000000000000000000019909116600160a01b1716600160a81b1790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a16040517f75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d90600090a1565b6109406109ef565b61094957600080fd5b816001600160a01b031663a9059cbb6109606109e0565b836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156109b057600080fd5b505af11580156109c4573d6000803e3d6000fd5b505050506040513d60208110156109da57600080fd5b50505050565b6009546001600160a01b031690565b6009546001600160a01b0316331490565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156106c85780601f1061069d576101008083540402835291602001916106c8565b610a6933610b17565b610a7257600080fd5b61075181610f26565b61073533610d8b565b610a8d336107e9565b610a9657600080fd5b61075181610f6e565b3360008181526004602090815260408083206001600160a01b038716845290915281205490916106df91859061079f908663ffffffff610fb616565b6009546000903390600160a81b900460ff1680610afc5750610afc816107e9565b610b0557600080fd5b610b0f8484610fcb565b949350505050565b60006107fc60068363ffffffff610eac16565b610b326109ef565b610b3b57600080fd5b61075181610d43565b600a805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610bca5780601f10610b9f57610100808354040283529160200191610bca565b820191906000526020600020905b815481529060010190602001808311610bad57829003601f168201915b505050505081565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b610c056109ef565b610c0e57600080fd5b60098054600160a81b60ff021916600160a81b1790556040517f75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d90600090a1565b610c576109ef565b610c6057600080fd5b61075181610fd8565b6001600160a01b038216610c7c57600080fd5b6001600160a01b038316610c8f57600080fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000610cfe848484611047565b6001600160a01b038416600090815260046020908152604080832033808552925290912054610d3991869161079f908663ffffffff610fb616565b5060019392505050565b610d5460088263ffffffff61111416565b6040516001600160a01b038216907f80c0b871b97b595b16a7741c1b06fed0c6f6f558639f18ccbce50724325dc40d90600090a250565b610d9c60068263ffffffff61111416565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000828201838110156107c857600080fd5b6000610df033610b17565b610df957600080fd5b6106df838361115c565b6001600160a01b038216610e1657600080fd5b600554610e29908263ffffffff610fb616565b6005556001600160a01b038216600090815260036020526040902054610e55908263ffffffff610fb616565b6001600160a01b0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b60006001600160a01b038216610ec157600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b610eeb8282610e03565b6001600160a01b03821660009081526004602090815260408083203380855292529091205461088291849161079f908563ffffffff610fb616565b610f3760068263ffffffff61118c16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610f7f60088263ffffffff61118c16565b6040516001600160a01b038216907fac6fa858e9350a46cec16539926e0fde25b7629f84b5a72bffaae4df888ae86d90600090a250565b600082821115610fc557600080fd5b50900390565b60006106df338484611047565b6001600160a01b038116610feb57600080fd5b6009546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03821661105a57600080fd5b6001600160a01b038316600090815260036020526040902054611083908263ffffffff610fb616565b6001600160a01b0380851660009081526003602052604080822093909355908416815220546110b8908263ffffffff610dd316565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b03811661112757600080fd5b6111318282610eac565b61113a57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6007546111778261116b6106e8565b9063ffffffff610dd316565b111561118257600080fd5b61088282826111d8565b6001600160a01b03811661119f57600080fd5b6111a98282610eac565b156111b357600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0382166111eb57600080fd5b6005546111fe908263ffffffff610dd316565b6005556001600160a01b03821660009081526003602052604090205461122a908263ffffffff610dd316565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fea165627a7a723058206104aba727eee37b0b3d5798452c361f48b2add6eeb76d0594388779b9579a00002968747470733a2f2f766974746f6d696e61636f72692e6769746875622e696f2f65726332302d67656e657261746f72",
  "deployedBytecode": "",
  "sourceMap": "683:37:4:-;;;-1:-1:-1;;;;;;767:37:4;;;268:73:0;223:407;268:73;;223:407;268:73;;;223:407;268:73;;;;;;;;;;;;;;;:::i;:::-;;348:240;8:9:-1;5:2;;;30:1;27;20:12;5:2;348:240:0;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;348:240:0;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;348:240:0;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;348:240:0;;;;;;;;;;;;;;493:12:12;;348:240:0;;-1:-1:-1;348:240:0;;-1:-1:-1;348:240:0;538:4;;348:240;;;;;;;;;;538:4;;348:240;;;;493:12:12;;:5;;:12;;;;:::i;:::-;-1:-1:-1;515:16:12;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:12;:20;;-1:-1:-1;;541:20:12;;;;;;;;;;;;-1:-1:-1;275:22:6;;-1:-1:-1;286:10:6;275;;;;;:22;;:::i;:::-;256:1:11;250:3;:7;242:16;;;;;;268:4;:10;318:24:3;331:10;318:12;;;;;:24;;:::i;:::-;515:6:8;:19;;-1:-1:-1;;;;;;515:19:8;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:8;;;;;515;;549:40;;515:6;;549:40;1776:17:4;;1772:77;;1809:29;1815:7;:5;;;:7;;:::i;:::-;1824:13;1809:5;;;:29;;:::i;:::-;1520:335;;;;;348:240:0;;;;;223:407;;685:119:6;741:21;754:7;741:8;:12;;;;;;:21;;;;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:6;;;;;;;;685:119;:::o;748:125:3:-;806:23;821:7;806:10;:14;;;;;;:23;;;;:::i;:::-;844:22;;-1:-1:-1;;;;;844:22:3;;;;;;;;748:125;:::o;659:77:8:-;723:6;;-1:-1:-1;;;;;723:6:8;659:77;;:::o;432:151:11:-;534:4;;506:24;524:5;506:13;:11;;;:13;;:::i;:::-;:17;;;;;;:24;;;;:::i;:::-;:32;;498:41;;;;;;549:27;561:7;570:5;549:11;;;;;:27;;:::i;:::-;432:151;;:::o;259:181:5:-;-1:-1:-1;;;;;335:21:5;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;916:89:9:-;986:12;;916:89;:::o;1439:145:7:-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;;1576:1;1439:145;-1:-1:-1;;;1439:145:7:o;5814:263:9:-;-1:-1:-1;;;;;5888:21:9;;5880:30;;;;;;5936:23;5953:5;5936:12;;:16;;;;;;:23;;;;:::i;:::-;5921:12;:38;-1:-1:-1;;;;;5990:18:9;;;;;;:9;:18;;;;;;;;;:29;;6013:5;;5990:22;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;5969:18:9;;;;;;:9;:18;;;;;;;;:50;;;;6034:36;;;;;;;5969:18;;;;6034:36;;;;;;;;;;5814:263;;:::o;786:162:5:-;858:4;-1:-1:-1;;;;;882:21:5;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;223:407:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;223:407:0;;;-1:-1:-1;223:407:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "223:407:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;223:407:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1923:94:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;628:81:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2721:145:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2721:145:9;;;;;;;;:::i;916:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;3282:162:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3282:162:4;;;;;;;;;;;;;;;;;:::i;663:79:3:-;;;:::i;:::-;;4249:95:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4249:95:4;-1:-1:-1;;;;;4249:95:4;;:::i;930:81:12:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;353:73:11;;;:::i;4067:200:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4067:200:9;;;;;;;;:::i;2426:116:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2426:116:4;;;;;;;;:::i;295:77:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;295:77:10;;:::i;2085:94:4:-;;;:::i;444:111:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;444:111:3;-1:-1:-1;;;;;444:111:3;;:::i;1217:104:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1217:104:9;-1:-1:-1;;;;;1217:104:9;;:::i;1423:137:8:-;;;:::i;619:93:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;619:93:10;;;;;;;;:::i;3535:185:4:-;;;:::i;596:150:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;596:150:2;;;;;;;;:::i;659:77:8:-;;;:::i;:::-;;;;-1:-1:-1;;;;;659:77:8;;;;;;;;;;;;;;979:90;;;:::i;771:85:12:-;;;:::i;508:90:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:6;-1:-1:-1;;;;;508:90:6;;:::i;604:75::-;;;:::i;561:96:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;561:96:3;-1:-1:-1;;;;;561:96:3;;:::i;4786:210:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4786:210:9;;;;;;;;:::i;2782:140:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2782:140:4;;;;;;;;:::i;395:107:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:6;-1:-1:-1;;;;;395:107:6;;:::i;4024:99:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4024:99:4;-1:-1:-1;;;;;4024:99:4;;:::i;268:73:0:-;;;:::i;1652:129:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1652:129:9;;;;;;;;;;:::i;3780:116:4:-;;;:::i;1731:107:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1731:107:8;-1:-1:-1;;;;;1731:107:8;;:::i;1923:94:4:-;1994:16;;-1:-1:-1;;;1994:16:4;;;;;1923:94::o;628:81:12:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2721:145:9:-;2786:4;2802:36;2811:10;2823:7;2832:5;2802:8;:36::i;:::-;-1:-1:-1;2855:4:9;2721:145;;;;:::o;916:89::-;986:12;;916:89;:::o;3282:162:4:-;1137:16;;3379:4;;3364;;-1:-1:-1;;;1137:16:4;;;;;:36;;;1157:16;1168:4;1157:10;:16::i;:::-;1129:45;;;;;;3402:35;3421:4;3427:2;3431:5;3402:18;:35::i;:::-;3395:42;3282:162;-1:-1:-1;;;;;3282:162:4:o;663:79:3:-;708:27;724:10;708:15;:27::i;:::-;663:79::o;4249:95:4:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;4315:22:4;4329:7;4315:13;:22::i;:::-;4249:95;:::o;930:81:12:-;995:9;;;;930:81;:::o;353:73:11:-;415:4;;353:73;:::o;4067:200:9:-;4172:10;4147:4;4193:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4193:29:9;;;;;;;;;;4147:4;;4163:76;;4184:7;;4193:45;;4227:10;4193:45;:33;:45;:::i;:::-;4163:8;:76::i;2426:116:4:-;928:16;;2491:4;;-1:-1:-1;;;928:16:4;;;;927:17;919:26;;;;;;2514:21;2525:2;2529:5;2514:10;:21::i;:::-;2507:28;2426:116;-1:-1:-1;;;2426:116:4:o;295:77:10:-;341:24;347:10;359:5;341;:24::i;2085:94:4:-;2156:16;;-1:-1:-1;;;2156:16:4;;;;;2085:94::o;444:111:3:-;502:4;525:23;:10;540:7;525:23;:14;:23;:::i;:::-;518:30;444:111;-1:-1:-1;;444:111:3:o;1217:104:9:-;-1:-1:-1;;;;;1298:16:9;1272:7;1298:16;;;:9;:16;;;;;;;1217:104::o;1423:137:8:-;863:9;:7;:9::i;:::-;855:18;;;;;;1505:6;;1484:40;;1521:1;;-1:-1:-1;;;;;1505:6:8;;1484:40;;1521:1;;1484:40;1534:6;:19;;-1:-1:-1;;;;;;1534:19:8;;;1423:137::o;619:93:10:-;683:22;693:4;699:5;683:9;:22::i;:::-;619:93;;:::o;3535:185:4:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;928:16:4;;-1:-1:-1;;;928:16:4;;;;927:17;919:26;;;;;;3595:16;:23;;-1:-1:-1;;;;;;;;3595:23:4;;;-1:-1:-1;;;3595:23:4;3628;-1:-1:-1;;;3628:23:4;;;3667:14;;;;3595:23;;3667:14;3696:17;;;;;;;3535:185::o;596:150:2:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;695:12:2;-1:-1:-1;;;;;688:29:2;;718:7;:5;:7::i;:::-;727:11;688:51;;;;;;;;;;;;;-1:-1:-1;;;;;688:51:2;-1:-1:-1;;;;;688:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;688:51:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;688:51:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;596:150:2:o;659:77:8:-;723:6;;-1:-1:-1;;;;;723:6:8;659:77;:::o;979:90::-;1056:6;;-1:-1:-1;;;;;1056:6:8;1042:10;:20;;979:90::o;771:85:12:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;508:90:6;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;572:19;583:7;572:10;:19::i;604:75::-;647:25;661:10;647:13;:25::i;561:96:3:-;397:22;408:10;397;:22::i;:::-;389:31;;;;;;629:21;642:7;629:12;:21::i;4786:210:9:-;4896:10;4871:4;4917:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4917:29:9;;;;;;;;;;4871:4;;4887:81;;4908:7;;4917:50;;4951:15;4917:50;:33;:50;:::i;2782:140:4:-;1137:16;;2867:4;;2846:10;;-1:-1:-1;;;1137:16:4;;;;;:36;;;1157:16;1168:4;1157:10;:16::i;:::-;1129:45;;;;;;2890:25;2905:2;2909:5;2890:14;:25::i;:::-;2883:32;2782:140;-1:-1:-1;;;;2782:140:4:o;395:107:6:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;4024:99:4:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;4092:24:4;4108:7;4092:15;:24::i;268:73:0:-;;;;;;;;;;;;;;;-1:-1:-1;;268:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1652:129:9:-;-1:-1:-1;;;;;1750:15:9;;;1724:7;1750:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1652:129::o;3780:116:4:-;863:9:8;:7;:9::i;:::-;855:18;;;;;;3833:16:4;:23;;-1:-1:-1;;;;;;3833:23:4;-1:-1:-1;;;3833:23:4;;;3872:17;;;;3833:23;;3872:17;3780:116::o;1731:107:8:-;863:9;:7;:9::i;:::-;855:18;;;;;;1803:28;1822:8;1803:18;:28::i;6831:248:9:-;-1:-1:-1;;;;;6923:21:9;;6915:30;;;;;;-1:-1:-1;;;;;6963:19:9;;6955:28;;;;;;-1:-1:-1;;;;;6994:15:9;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7041:31;;;;;;;;;;;;;;;;;6831:248;;;:::o;3329:224::-;3408:4;3424:26;3434:4;3440:2;3444:5;3424:9;:26::i;:::-;-1:-1:-1;;;;;3487:14:9;;;;;;:8;:14;;;;;;;;3475:10;3487:26;;;;;;;;;3460:65;;3469:4;;3487:37;;3518:5;3487:37;:30;:37;:::i;3460:65::-;-1:-1:-1;3542:4:9;3329:224;;;;;:::o;879:133:3:-;940:26;:10;958:7;940:26;:17;:26;:::i;:::-;981:24;;-1:-1:-1;;;;;981:24:3;;;;;;;;879:133;:::o;810:127:6:-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:6;;;;;;;;810:127;:::o;1439:145:7:-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;443:128:13;511:4;350:20:6;359:10;350:8;:20::i;:::-;342:29;;;;;;527:16:13;533:2;537:5;527;:16::i;6303:263:9:-;-1:-1:-1;;;;;6377:21:9;;6369:30;;;;;;6425:12;;:23;;6442:5;6425:23;:16;:23;:::i;:::-;6410:12;:38;-1:-1:-1;;;;;6479:18:9;;;;;;:9;:18;;;;;;:29;;6502:5;6479:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6458:18:9;;;;;;:9;:18;;;;;;;;:50;;;;6523:36;;;;;;;6458:18;;6523:36;;;;;;;;;;;6303:263;;:::o;786:162:5:-;858:4;-1:-1:-1;;;;;882:21:5;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;7468:179:9:-;7538:21;7544:7;7553:5;7538;:21::i;:::-;-1:-1:-1;;;;;7599:17:9;;;;;;:8;:17;;;;;;;;7587:10;7599:29;;;;;;;;;7569:71;;7578:7;;7599:40;;7633:5;7599:40;:33;:40;:::i;685:119:6:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:6;;;;;;;;685:119;:::o;748:125:3:-;806:23;:10;821:7;806:23;:14;:23;:::i;:::-;844:22;;-1:-1:-1;;;;;844:22:3;;;;;;;;748:125;:::o;1211:145:7:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:7;;;1211:145::o;1948:137:9:-;2009:4;2025:32;2035:10;2047:2;2051:5;2025:9;:32::i;1982:183:8:-;-1:-1:-1;;;;;2055:22:8;;2047:31;;;;;;2114:6;;2093:38;;-1:-1:-1;;;;;2093:38:8;;;;2114:6;;2093:38;;2114:6;;2093:38;2141:6;:17;;-1:-1:-1;;;;;;2141:17:8;-1:-1:-1;;;;;2141:17:8;;;;;;;;;;1982:183::o;5215:256:9:-;-1:-1:-1;;;;;5302:16:9;;5294:25;;;;;;-1:-1:-1;;;;;5348:15:9;;;;;;:9;:15;;;;;;:26;;5368:5;5348:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5330:15:9;;;;;;;:9;:15;;;;;;:44;;;;5400:13;;;;;;;:24;;5418:5;5400:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5384:13:9;;;;;;;:9;:13;;;;;;;;;:40;;;;5439:25;;;;;;;5384:13;;5439:25;;;;;;;;;;;;;5215:256;;;:::o;514:184:5:-;-1:-1:-1;;;;;593:21:5;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;-1:-1:-1;;;;;663:20:5;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:5;;;514:184::o;432:151:11:-;534:4;;506:24;524:5;506:13;:11;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;:32;;498:41;;;;;;549:27;561:7;570:5;549:11;:27::i;259:181:5:-;-1:-1:-1;;;;;335:21:5;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;5814:263:9:-;-1:-1:-1;;;;;5888:21:9;;5880:30;;;;;;5936:12;;:23;;5953:5;5936:23;:16;:23;:::i;:::-;5921:12;:38;-1:-1:-1;;;;;5990:18:9;;;;;;:9;:18;;;;;;:29;;6013:5;5990:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;5969:18:9;;;;;;:9;:18;;;;;;;;:50;;;;6034:36;;;;;;;5969:18;;;;6034:36;;;;;;;;;;5814:263;;:::o",
  "source": "pragma solidity ^0.5.7;\n\nimport \"ico-maker/contracts/token/ERC20/BaseERC20Token.sol\";\n\n/**\n * @title ERC20Token\n * @author Vittorio Minacori (https://github.com/vittominacori)\n * @dev Implementation of a BaseERC20Token\n */\ncontract ERC20Token is BaseERC20Token {\n\n    string public builtOn = \"https://vittominacori.github.io/erc20-generator\";\n\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals,\n        uint256 cap,\n        uint256 initialSupply\n    )\n        public\n        BaseERC20Token(name, symbol, decimals, cap, initialSupply)\n    {} // solhint-disable-line no-empty-blocks\n}\n",
  "sourcePath": "/Users/vittominacori/Projects/vittominacori.github.io/erc20-generator/erc20-generator-smartcontracts/contracts/ERC20Token.sol",
  "ast": {
    "absolutePath": "/Users/vittominacori/Projects/vittominacori.github.io/erc20-generator/erc20-generator-smartcontracts/contracts/ERC20Token.sol",
    "exportedSymbols": {
      "ERC20Token": [
        29
      ]
    },
    "id": 30,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "ico-maker/contracts/token/ERC20/BaseERC20Token.sol",
        "file": "ico-maker/contracts/token/ERC20/BaseERC20Token.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 30,
        "sourceUnit": 397,
        "src": "25:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "BaseERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 396,
              "src": "246:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseERC20Token_$396",
                "typeString": "contract BaseERC20Token"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "246:14:0"
          }
        ],
        "contractDependencies": [
          74,
          177,
          396,
          593,
          830,
          1213,
          1244,
          1301,
          1359,
          1387,
          1456
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Token\n@author Vittorio Minacori (https://github.com/vittominacori)\n@dev Implementation of a BaseERC20Token",
        "fullyImplemented": true,
        "id": 29,
        "linearizedBaseContracts": [
          29,
          396,
          74,
          830,
          177,
          1244,
          1301,
          1387,
          593,
          1213,
          1359,
          1456
        ],
        "name": "ERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "builtOn",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "268:73:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "268:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "68747470733a2f2f766974746f6d696e61636f72692e6769746875622e696f2f65726332302d67656e657261746f72",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "292:49:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d699d94e432732754321d065f2307365908e9ae0fe6e1ba925fd83c3d2369543",
                "typeString": "literal_string \"https://vittominacori.github.io/erc20-generator\""
              },
              "value": "https://vittominacori.github.io/erc20-generator"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "586:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 20,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "538:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 21,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "544:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 22,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "552:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "562:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24,
                    "name": "initialSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "567:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 25,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19,
                  "name": "BaseERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 396,
                  "src": "523:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BaseERC20Token_$396_$",
                    "typeString": "type(contract BaseERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "523:58:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "369:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "397:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "427:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "451:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "472:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "359:140:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:0:0"
            },
            "scope": 29,
            "src": "348:240:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 30,
        "src": "223:407:0"
      }
    ],
    "src": "0:631:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/vittominacori/Projects/vittominacori.github.io/erc20-generator/erc20-generator-smartcontracts/contracts/ERC20Token.sol",
    "exportedSymbols": {
      "ERC20Token": [
        29
      ]
    },
    "id": 30,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "ico-maker/contracts/token/ERC20/BaseERC20Token.sol",
        "file": "ico-maker/contracts/token/ERC20/BaseERC20Token.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 30,
        "sourceUnit": 397,
        "src": "25:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "BaseERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 396,
              "src": "246:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseERC20Token_$396",
                "typeString": "contract BaseERC20Token"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "246:14:0"
          }
        ],
        "contractDependencies": [
          74,
          177,
          396,
          593,
          830,
          1213,
          1244,
          1301,
          1359,
          1387,
          1456
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Token\n@author Vittorio Minacori (https://github.com/vittominacori)\n@dev Implementation of a BaseERC20Token",
        "fullyImplemented": true,
        "id": 29,
        "linearizedBaseContracts": [
          29,
          396,
          74,
          830,
          177,
          1244,
          1301,
          1387,
          593,
          1213,
          1359,
          1456
        ],
        "name": "ERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "builtOn",
            "nodeType": "VariableDeclaration",
            "scope": 29,
            "src": "268:73:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "268:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "68747470733a2f2f766974746f6d696e61636f72692e6769746875622e696f2f65726332302d67656e657261746f72",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "292:49:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d699d94e432732754321d065f2307365908e9ae0fe6e1ba925fd83c3d2369543",
                "typeString": "literal_string \"https://vittominacori.github.io/erc20-generator\""
              },
              "value": "https://vittominacori.github.io/erc20-generator"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "586:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 20,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "538:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 21,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "544:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 22,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "552:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "562:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24,
                    "name": "initialSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "567:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 25,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19,
                  "name": "BaseERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 396,
                  "src": "523:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BaseERC20Token_$396_$",
                    "typeString": "type(contract BaseERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "523:58:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "369:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "397:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "427:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "451:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "472:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "359:140:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:0:0"
            },
            "scope": 29,
            "src": "348:240:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 30,
        "src": "223:407:0"
      }
    ],
    "src": "0:631:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-17T22:10:33.873Z",
  "devdoc": {
    "author": "Vittorio Minacori (https://github.com/vittominacori)",
    "details": "Implementation of a BaseERC20Token",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The account whose tokens will be burned.",
          "value": "uint256 The amount of token to be burned."
        }
      },
      "cap()": {
        "return": "the cap for the token minting."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "enableTransfer()": {
        "details": "Function to enable transfers."
      },
      "finishMinting()": {
        "details": "Function to stop minting new tokens and enable transfer."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "mintingFinished()": {
        "return": "if minting is finished or not."
      },
      "name()": {
        "return": "the name of the token."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "recoverERC20(address,uint256)": {
        "details": "Remember that only owner can call so be careful when use on contracts generated from other contracts.",
        "params": {
          "tokenAddress": "The token contract address",
          "tokenAmount": "Number of tokens to be sent"
        }
      },
      "removeMinter(address)": {
        "details": "remove the `minter` role from address",
        "params": {
          "account": "Address you want to remove role"
        }
      },
      "removeOperator(address)": {
        "details": "remove the `operator` role from address",
        "params": {
          "account": "Address you want to remove role"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "transferEnabled()": {
        "return": "if transfer is enabled or not."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "ERC20Token"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}