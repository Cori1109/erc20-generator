{
  "contractName": "ERC20Token",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "roleName",
          "type": "string"
        }
      ],
      "name": "checkRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "roleName",
          "type": "string"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "increaseApprovalAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROLE_MINTER",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "builtOn",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "decreaseApprovalAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "name": "_initialAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "roleName",
          "type": "string"
        }
      ],
      "name": "RoleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "roleName",
          "type": "string"
        }
      ],
      "name": "RoleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "transferAnyERC20Token",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6006805460a060020a60ff021916905560e0604052602f60808190527f68747470733a2f2f766974746f6d696e61636f72692e6769746875622e696f2f60a09081527f65726332302d67656e657261746f72000000000000000000000000000000000060c05262000074916008919062000345565b503480156200008257600080fd5b5060405162001c6138038062001c618339810160409081528151602080840151928401516060850151928501805190959490940193909291859185918591620000d2916000919086019062000345565b508151620000e890600190602085019062000345565b506002805460ff90921660ff19909216919091179055505060068054600160a060020a031916331790556000811115620001555760025460068054600160a060020a0390811660009081526003602052604080822060ff909516600a0a8602909455915416815220546004555b6006546200017590600160a060020a03166401000000006200017f810204565b50505050620003ea565b600654600160a060020a031633146200019757600080fd5b620001e7816040805190810160405280600681526020017f6d696e7465720000000000000000000000000000000000000000000000000000815250620001ea640100000000026401000000009004565b50565b62000266826007836040518082805190602001908083835b60208310620002235780518252601f19909201916020918201910162000202565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922092915050640100000000620003208102620017d61704565b7fbfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b70048982826040518083600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620002e0578181015183820152602001620002c6565b50505050905090810190601f1680156200030e5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050565b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200038857805160ff1916838001178555620003b8565b82800160010185558215620003b8579182015b82811115620003b85782518255916020019190600101906200039b565b50620003c6929150620003ca565b5090565b620003e791905b80821115620003c65760008155600101620003d1565b90565b61186780620003fa6000396000f30060806040526004361061017f5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461018457806306fdde03146101ad578063095ea7b3146102375780630988ca8c1461025b57806318160ddd146102c4578063217fe6c6146102eb57806323b872dd146103525780633092afd51461037c578063313ce5671461039d5780634000aea0146103c857806340c10f191461042457806342966c6814610448578063661884631461046057806370a0823114610484578063715018a6146104a55780637d64bcb4146104ba5780638da5cb5b146104cf57806390db623f1461050057806392afc33a1461055c57806395d89b4114610571578063983b2d5614610586578063a9059cbb146105a7578063b60b7084146105cb578063c1d34b89146105e0578063cae9ca5114610642578063cb3993be1461069e578063d73dd623146106fa578063dc39d06d1461071e578063dd62ed3e14610742578063f2fde38b14610769575b600080fd5b34801561019057600080fd5b5061019961078a565b604080519115158252519081900360200190f35b3480156101b957600080fd5b506101c26107ab565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101fc5781810151838201526020016101e4565b50505050905090810190601f1680156102295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024357600080fd5b50610199600160a060020a0360043516602435610839565b34801561026757600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526102c2958335600160a060020a031695369560449491939091019190819084018382808284375094975061089f9650505050505050565b005b3480156102d057600080fd5b506102d961090d565b60408051918252519081900360200190f35b3480156102f757600080fd5b5060408051602060046024803582810135601f8101859004850286018501909652858552610199958335600160a060020a03169536956044949193909101919081908401838280828437509497506109139650505050505050565b34801561035e57600080fd5b50610199600160a060020a0360043581169060243516604435610986565b34801561038857600080fd5b506102c2600160a060020a0360043516610aed565b3480156103a957600080fd5b506103b2610b34565b6040805160ff9092168252519081900360200190f35b604080516020600460443581810135601f8101849004840285018401909552848452610199948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610b3d9650505050505050565b34801561043057600080fd5b50610199600160a060020a0360043516602435610bed565b34801561045457600080fd5b506102c2600435610d0d565b34801561046c57600080fd5b50610199600160a060020a0360043516602435610d17565b34801561049057600080fd5b506102d9600160a060020a0360043516610e07565b3480156104b157600080fd5b506102c2610e22565b3480156104c657600080fd5b50610199610e90565b3480156104db57600080fd5b506104e4610f36565b60408051600160a060020a039092168252519081900360200190f35b604080516020600460443581810135601f8101849004840285018401909552848452610199948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610f459650505050505050565b34801561056857600080fd5b506101c2610f67565b34801561057d57600080fd5b506101c2610f8c565b34801561059257600080fd5b506102c2600160a060020a0360043516610fe6565b3480156105b357600080fd5b50610199600160a060020a036004351660243561102a565b3480156105d757600080fd5b506101c26110fb565b604080516020601f60643560048181013592830184900484028501840190955281845261019994600160a060020a0381358116956024803590921695604435953695608494019181908401838280828437509497506111569650505050505050565b604080516020600460443581810135601f8101849004840285018401909552848452610199948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506112089650505050505050565b604080516020600460443581810135601f8101849004840285018401909552848452610199948235600160a060020a031694602480359536959460649492019190819084018382808284375094975061122a9650505050505050565b34801561070657600080fd5b50610199600160a060020a036004351660243561124c565b34801561072a57600080fd5b50610199600160a060020a03600435166024356112e5565b34801561074e57600080fd5b506102d9600160a060020a03600435811690602435166113a1565b34801561077557600080fd5b506102c2600160a060020a03600435166113cc565b60065474010000000000000000000000000000000000000000900460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b505050505081565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b610909826007836040518082805190602001908083835b602083106108d55780518252601f1990920191602091820191016108b6565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220929150506113ec565b5050565b60045490565b600061097f836007846040518082805190602001908083835b6020831061094b5780518252601f19909201916020918201910161092c565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922092915050611401565b9392505050565b6000600160a060020a038316151561099d57600080fd5b600160a060020a0384166000908152600360205260409020548211156109c257600080fd5b600160a060020a03841660009081526005602090815260408083203384529091529020548211156109f257600080fd5b600160a060020a038416600090815260036020526040902054610a1b908363ffffffff61142016565b600160a060020a038086166000908152600360205260408082209390935590851681522054610a50908363ffffffff61143216565b600160a060020a038085166000908152600360209081526040808320949094559187168152600582528281203382529091522054610a94908363ffffffff61142016565b600160a060020a038086166000818152600560209081526040808320338452825291829020949094558051868152905192871693919260008051602061181c833981519152929181900390910190a35060019392505050565b600654600160a060020a03163314610b0457600080fd5b610b31816040805190810160405280600681526020016000805160206117fc833981519152815250611445565b50565b60025460ff1681565b6000600160a060020a038416301415610b5557600080fd5b610b5f848461102a565b5083600160a060020a0316348360405180828051906020019080838360005b83811015610b96578181015183820152602001610b7e565b50505050905090810190601f168015610bc35780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af1925050501515610be357600080fd5b5060019392505050565b6000610c1c336040805190810160405280600681526020016000805160206117fc83398151915281525061089f565b60065474010000000000000000000000000000000000000000900460ff1615610c4457600080fd5b600454610c57908363ffffffff61143216565b600455600160a060020a038316600090815260036020526040902054610c83908363ffffffff61143216565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a0385169160009160008051602061181c8339815191529181900360200190a350600192915050565b610b313382611566565b336000908152600560209081526040808320600160a060020a038616845290915281205480831115610d6c57336000908152600560209081526040808320600160a060020a0388168452909152812055610da1565b610d7c818463ffffffff61142016565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526003602052604090205490565b600654600160a060020a03163314610e3957600080fd5b600654604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26006805473ffffffffffffffffffffffffffffffffffffffff19169055565b600654600090600160a060020a03163314610eaa57600080fd5b60065474010000000000000000000000000000000000000000900460ff1615610ed257600080fd5b6006805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600654600160a060020a031681565b6000600160a060020a038416301415610f5d57600080fd5b610b5f848461124c565b60408051808201909152600681526000805160206117fc833981519152602082015281565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108315780601f1061080657610100808354040283529160200191610831565b600654600160a060020a03163314610ffd57600080fd5b610b31816040805190810160405280600681526020016000805160206117fc833981519152815250611655565b6000600160a060020a038316151561104157600080fd5b3360009081526003602052604090205482111561105d57600080fd5b3360009081526003602052604090205461107d908363ffffffff61142016565b3360009081526003602052604080822092909255600160a060020a038516815220546110af908363ffffffff61143216565b600160a060020a03841660008181526003602090815260409182902093909355805185815290519192339260008051602061181c8339815191529281900390910190a350600192915050565b6008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108315780601f1061080657610100808354040283529160200191610831565b6000600160a060020a03841630141561116e57600080fd5b611179858585610986565b5083600160a060020a0316348360405180828051906020019080838360005b838110156111b0578181015183820152602001611198565b50505050905090810190601f1680156111dd5780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af19250505015156111fd57600080fd5b506001949350505050565b6000600160a060020a03841630141561122057600080fd5b610b5f8484610839565b6000600160a060020a03841630141561124257600080fd5b610b5f8484610d17565b336000908152600560209081526040808320600160a060020a0386168452909152812054611280908363ffffffff61143216565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600654600090600160a060020a031633146112ff57600080fd5b600654604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810185905290519185169163a9059cbb916044808201926020929091908290030181600087803b15801561136e57600080fd5b505af1158015611382573d6000803e3d6000fd5b505050506040513d602081101561139857600080fd5b50519392505050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600654600160a060020a031633146113e357600080fd5b610b3181611736565b6113f68282611401565b151561090957600080fd5b600160a060020a03166000908152602091909152604090205460ff1690565b60008282111561142c57fe5b50900390565b8181018281101561143f57fe5b92915050565b6114af826007836040518082805190602001908083835b6020831061147b5780518252601f19909201916020918201910161145c565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220929150506117b4565b7fd211483f91fc6eff862467f8de606587a30c8fc9981056f051b897a418df803a82826040518083600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561152757818101518382015260200161150f565b50505050905090810190601f1680156115545780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050565b600160a060020a03821660009081526003602052604090205481111561158b57600080fd5b600160a060020a0382166000908152600360205260409020546115b4908263ffffffff61142016565b600160a060020a0383166000908152600360205260409020556004546115e0908263ffffffff61142016565b600455604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a0385169160008051602061181c8339815191529181900360200190a35050565b6116bf826007836040518082805190602001908083835b6020831061168b5780518252601f19909201916020918201910161166c565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220929150506117d6565b7fbfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b70048982826040518083600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360008381101561152757818101518382015260200161150f565b600160a060020a038116151561174b57600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a0316600090815260209190915260409020805460ff19169055565b600160a060020a0316600090815260209190915260409020805460ff1916600117905556006d696e7465720000000000000000000000000000000000000000000000000000ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582016f07ad4c2cd34294883ff1ace6e290e9d281df21980ddf05332dc9e0601983d0029",
  "deployedBytecode": "0x60806040526004361061017f5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461018457806306fdde03146101ad578063095ea7b3146102375780630988ca8c1461025b57806318160ddd146102c4578063217fe6c6146102eb57806323b872dd146103525780633092afd51461037c578063313ce5671461039d5780634000aea0146103c857806340c10f191461042457806342966c6814610448578063661884631461046057806370a0823114610484578063715018a6146104a55780637d64bcb4146104ba5780638da5cb5b146104cf57806390db623f1461050057806392afc33a1461055c57806395d89b4114610571578063983b2d5614610586578063a9059cbb146105a7578063b60b7084146105cb578063c1d34b89146105e0578063cae9ca5114610642578063cb3993be1461069e578063d73dd623146106fa578063dc39d06d1461071e578063dd62ed3e14610742578063f2fde38b14610769575b600080fd5b34801561019057600080fd5b5061019961078a565b604080519115158252519081900360200190f35b3480156101b957600080fd5b506101c26107ab565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101fc5781810151838201526020016101e4565b50505050905090810190601f1680156102295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024357600080fd5b50610199600160a060020a0360043516602435610839565b34801561026757600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526102c2958335600160a060020a031695369560449491939091019190819084018382808284375094975061089f9650505050505050565b005b3480156102d057600080fd5b506102d961090d565b60408051918252519081900360200190f35b3480156102f757600080fd5b5060408051602060046024803582810135601f8101859004850286018501909652858552610199958335600160a060020a03169536956044949193909101919081908401838280828437509497506109139650505050505050565b34801561035e57600080fd5b50610199600160a060020a0360043581169060243516604435610986565b34801561038857600080fd5b506102c2600160a060020a0360043516610aed565b3480156103a957600080fd5b506103b2610b34565b6040805160ff9092168252519081900360200190f35b604080516020600460443581810135601f8101849004840285018401909552848452610199948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610b3d9650505050505050565b34801561043057600080fd5b50610199600160a060020a0360043516602435610bed565b34801561045457600080fd5b506102c2600435610d0d565b34801561046c57600080fd5b50610199600160a060020a0360043516602435610d17565b34801561049057600080fd5b506102d9600160a060020a0360043516610e07565b3480156104b157600080fd5b506102c2610e22565b3480156104c657600080fd5b50610199610e90565b3480156104db57600080fd5b506104e4610f36565b60408051600160a060020a039092168252519081900360200190f35b604080516020600460443581810135601f8101849004840285018401909552848452610199948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610f459650505050505050565b34801561056857600080fd5b506101c2610f67565b34801561057d57600080fd5b506101c2610f8c565b34801561059257600080fd5b506102c2600160a060020a0360043516610fe6565b3480156105b357600080fd5b50610199600160a060020a036004351660243561102a565b3480156105d757600080fd5b506101c26110fb565b604080516020601f60643560048181013592830184900484028501840190955281845261019994600160a060020a0381358116956024803590921695604435953695608494019181908401838280828437509497506111569650505050505050565b604080516020600460443581810135601f8101849004840285018401909552848452610199948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506112089650505050505050565b604080516020600460443581810135601f8101849004840285018401909552848452610199948235600160a060020a031694602480359536959460649492019190819084018382808284375094975061122a9650505050505050565b34801561070657600080fd5b50610199600160a060020a036004351660243561124c565b34801561072a57600080fd5b50610199600160a060020a03600435166024356112e5565b34801561074e57600080fd5b506102d9600160a060020a03600435811690602435166113a1565b34801561077557600080fd5b506102c2600160a060020a03600435166113cc565b60065474010000000000000000000000000000000000000000900460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b505050505081565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b610909826007836040518082805190602001908083835b602083106108d55780518252601f1990920191602091820191016108b6565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220929150506113ec565b5050565b60045490565b600061097f836007846040518082805190602001908083835b6020831061094b5780518252601f19909201916020918201910161092c565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922092915050611401565b9392505050565b6000600160a060020a038316151561099d57600080fd5b600160a060020a0384166000908152600360205260409020548211156109c257600080fd5b600160a060020a03841660009081526005602090815260408083203384529091529020548211156109f257600080fd5b600160a060020a038416600090815260036020526040902054610a1b908363ffffffff61142016565b600160a060020a038086166000908152600360205260408082209390935590851681522054610a50908363ffffffff61143216565b600160a060020a038085166000908152600360209081526040808320949094559187168152600582528281203382529091522054610a94908363ffffffff61142016565b600160a060020a038086166000818152600560209081526040808320338452825291829020949094558051868152905192871693919260008051602061181c833981519152929181900390910190a35060019392505050565b600654600160a060020a03163314610b0457600080fd5b610b31816040805190810160405280600681526020016000805160206117fc833981519152815250611445565b50565b60025460ff1681565b6000600160a060020a038416301415610b5557600080fd5b610b5f848461102a565b5083600160a060020a0316348360405180828051906020019080838360005b83811015610b96578181015183820152602001610b7e565b50505050905090810190601f168015610bc35780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af1925050501515610be357600080fd5b5060019392505050565b6000610c1c336040805190810160405280600681526020016000805160206117fc83398151915281525061089f565b60065474010000000000000000000000000000000000000000900460ff1615610c4457600080fd5b600454610c57908363ffffffff61143216565b600455600160a060020a038316600090815260036020526040902054610c83908363ffffffff61143216565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a0385169160009160008051602061181c8339815191529181900360200190a350600192915050565b610b313382611566565b336000908152600560209081526040808320600160a060020a038616845290915281205480831115610d6c57336000908152600560209081526040808320600160a060020a0388168452909152812055610da1565b610d7c818463ffffffff61142016565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526003602052604090205490565b600654600160a060020a03163314610e3957600080fd5b600654604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26006805473ffffffffffffffffffffffffffffffffffffffff19169055565b600654600090600160a060020a03163314610eaa57600080fd5b60065474010000000000000000000000000000000000000000900460ff1615610ed257600080fd5b6006805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600654600160a060020a031681565b6000600160a060020a038416301415610f5d57600080fd5b610b5f848461124c565b60408051808201909152600681526000805160206117fc833981519152602082015281565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108315780601f1061080657610100808354040283529160200191610831565b600654600160a060020a03163314610ffd57600080fd5b610b31816040805190810160405280600681526020016000805160206117fc833981519152815250611655565b6000600160a060020a038316151561104157600080fd5b3360009081526003602052604090205482111561105d57600080fd5b3360009081526003602052604090205461107d908363ffffffff61142016565b3360009081526003602052604080822092909255600160a060020a038516815220546110af908363ffffffff61143216565b600160a060020a03841660008181526003602090815260409182902093909355805185815290519192339260008051602061181c8339815191529281900390910190a350600192915050565b6008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108315780601f1061080657610100808354040283529160200191610831565b6000600160a060020a03841630141561116e57600080fd5b611179858585610986565b5083600160a060020a0316348360405180828051906020019080838360005b838110156111b0578181015183820152602001611198565b50505050905090810190601f1680156111dd5780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af19250505015156111fd57600080fd5b506001949350505050565b6000600160a060020a03841630141561122057600080fd5b610b5f8484610839565b6000600160a060020a03841630141561124257600080fd5b610b5f8484610d17565b336000908152600560209081526040808320600160a060020a0386168452909152812054611280908363ffffffff61143216565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600654600090600160a060020a031633146112ff57600080fd5b600654604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810185905290519185169163a9059cbb916044808201926020929091908290030181600087803b15801561136e57600080fd5b505af1158015611382573d6000803e3d6000fd5b505050506040513d602081101561139857600080fd5b50519392505050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600654600160a060020a031633146113e357600080fd5b610b3181611736565b6113f68282611401565b151561090957600080fd5b600160a060020a03166000908152602091909152604090205460ff1690565b60008282111561142c57fe5b50900390565b8181018281101561143f57fe5b92915050565b6114af826007836040518082805190602001908083835b6020831061147b5780518252601f19909201916020918201910161145c565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220929150506117b4565b7fd211483f91fc6eff862467f8de606587a30c8fc9981056f051b897a418df803a82826040518083600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561152757818101518382015260200161150f565b50505050905090810190601f1680156115545780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050565b600160a060020a03821660009081526003602052604090205481111561158b57600080fd5b600160a060020a0382166000908152600360205260409020546115b4908263ffffffff61142016565b600160a060020a0383166000908152600360205260409020556004546115e0908263ffffffff61142016565b600455604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a0385169160008051602061181c8339815191529181900360200190a35050565b6116bf826007836040518082805190602001908083835b6020831061168b5780518252601f19909201916020918201910161166c565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220929150506117d6565b7fbfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b70048982826040518083600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360008381101561152757818101518382015260200161150f565b600160a060020a038116151561174b57600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a0316600090815260209190915260409020805460ff19169055565b600160a060020a0316600090815260209190915260409020805460ff1916600117905556006d696e7465720000000000000000000000000000000000000000000000000000ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582016f07ad4c2cd34294883ff1ace6e290e9d281df21980ddf05332dc9e0601983d0029",
  "sourceMap": "518:35:11:-;;;-1:-1:-1;;;;;;518:35:11;;;408:73:0;319:680;408:73;;319:680;408:73;;;;;;;;;;;;;;;;;:::i;:::-;;486:328;8:9:-1;5:2;;;30:1;27;20:12;5:2;486:328:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:12:8;;486:328:0;;;;;;;;;;;;;;;;463:12:8;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;481:16:8;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;503:8:8;:20;;;;;;-1:-1:-1;;503:20:8;;;;;;;;;-1:-1:-1;;567:5:3;:18;;-1:-1:-1;;;;;;567:18:3;575:10;567:18;;;503:8:8;654:18:0;;650:137;;;732:8;;691:5;;;-1:-1:-1;;;;;691:5:0;;;732:8;682:15;;;:8;:15;;;;;;732:8;;;;718:2;:23;700:42;;682:60;;;774:5;;;765:15;;;;750:12;:30;650:137;803:5;;793:16;;-1:-1:-1;;;;;803:5:0;793:9;;;;:16;:::i;:::-;486:328;;;;319:680;;648:91:12;719:5:3;;-1:-1:-1;;;;;719:5:3;705:10;:19;697:28;;;;;;706::12;714:6;722:11;;;;;;;;;;;;;;;;;;706:7;;;:28;;;:::i;:::-;648:91;:::o;1439:135:4:-;1508:25;1528:4;1508:5;1514:8;1508:15;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1508:15:4;;;;;-1:-1:-1;1508:15:4;;;;;;;;;;;;-1:-1:-1;;1508:19:4;;;;;;:25;:::i;:::-;1544;1554:4;1560:8;1544:25;;;;-1:-1:-1;;;;;1544:25:4;-1:-1:-1;;;;;1544:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1544:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1439:135;;:::o;326:96:5:-;-1:-1:-1;;;;;393:17:5;:11;:17;;;;;;;;;;;:24;;-1:-1:-1;;393:24:5;413:4;393:24;;;326:96::o;319:680:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;319:680:0;;;-1:-1:-1;319:680:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "319:680:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;518:35:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;518:35:11;;;;;;;;;;;;;;;;;;;;;;319:18:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;319:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1829:188:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1829:188:13;-1:-1:-1;;;;;1829:188:13;;;;;;;941:110:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;941:110:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;941:110:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;941:110:4;;-1:-1:-1;941:110:4;;-1:-1:-1;;;;;;;941:110:4;;;371:83:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;371:83:6;;;;;;;;;;;;;;;;;;;;1189:132:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1189:132:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1189:132:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1189:132:4;;-1:-1:-1;1189:132:4;;-1:-1:-1;;;;;;;1189:132:4;736:470:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;736:470:13;-1:-1:-1;;;;;736:470:13;;;;;;;;;;;;829:97:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;829:97:12;-1:-1:-1;;;;;829:97:12;;;;;365:21:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:21:8;;;;;;;;;;;;;;;;;;;;;;;2086:321:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2086:321:15;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2086:321:15;;-1:-1:-1;2086:321:15;;-1:-1:-1;;;;;;;2086:321:15;936:312:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;936:312:11;-1:-1:-1;;;;;936:312:11;;;;;;;353:73:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;353:73:7;;;;;3701:425:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3701:425:13;-1:-1:-1;;;;;3701:425:13;;;;;;;1131:99:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1131:99:6;-1:-1:-1;;;;;1131:99:6;;;;;827:111:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:111:3;;;;1362:140:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1362:140:11;;;;238:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:3;;;;;;;;-1:-1:-1;;;;;238:20:3;;;;;;;;;;;;;;3875:365:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3875:365:15;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3875:365:15;;-1:-1:-1;3875:365:15;;-1:-1:-1;;;;;;;3875:365:15;349:45:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;349:45:12;;;;341:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:20:8;;;;648:91:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;648:91:12;-1:-1:-1;;;;;648:91:12;;;;;608:321:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;608:321:6;-1:-1:-1;;;;;608:321:6;;;;;;;408:73:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;408:73:0;;;;2891:347:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2891:347:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2891:347:15;;-1:-1:-1;2891:347:15;;-1:-1:-1;;;;;;;2891:347:15;1304:340;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1304:340:15;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1304:340:15;;-1:-1:-1;1304:340:15;;-1:-1:-1;;;;;;;1304:340:15;4882:375;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4882:375:15;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4882:375:15;;-1:-1:-1;4882:375:15;;-1:-1:-1;;;;;;;4882:375:15;2946:293:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2946:293:13;-1:-1:-1;;;;;2946:293:13;;;;;;;818:179:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;818:179:0;-1:-1:-1;;;;;818:179:0;;;;;;;2336:153:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2336:153:13;-1:-1:-1;;;;;2336:153:13;;;;;;;;;;1100:103:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1100:103:3;-1:-1:-1;;;;;1100:103:3;;;;;518:35:11;;;;;;;;;:::o;319:18:8:-;;;;;;;;;;;;;;;-1:-1:-1;;319:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1829:188:13:-;1916:10;1896:4;1908:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1908:29:13;;;;;;;;;;;:38;;;1957;;;;;;;1896:4;;1908:29;;1916:10;;1957:38;;;;;;;;-1:-1:-1;2008:4:13;1829:188;;;;:::o;941:110:4:-;1019:27;1041:4;1019:5;1025:8;1019:15;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1019:15:4;;;;;-1:-1:-1;1019:15:4;;;;;;;;;;;;-1:-1:-1;;1019:21:4;:27::i;:::-;941:110;;:::o;371:83:6:-;437:12;;371:83;:::o;1189:132:4:-;1270:4;1291:25;1311:4;1291:5;1297:8;1291:15;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1291:15:4;;;;;-1:-1:-1;1291:15:4;;;;;;;;;;;;-1:-1:-1;;1291:19:4;:25::i;:::-;1284:32;1189:132;-1:-1:-1;;;1189:132:4:o;736:470:13:-;842:4;-1:-1:-1;;;;;864:17:13;;;;856:26;;;;;;-1:-1:-1;;;;;906:15:13;;;;;;:8;:15;;;;;;896:25;;;888:34;;;;;;-1:-1:-1;;;;;946:14:13;;;;;;:7;:14;;;;;;;;961:10;946:26;;;;;;;;936:36;;;928:45;;;;;;-1:-1:-1;;;;;998:15:13;;;;;;:8;:15;;;;;;:27;;1018:6;998:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;980:15:13;;;;;;;:8;:15;;;;;;:45;;;;1047:13;;;;;;;:25;;1065:6;1047:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1031:13:13;;;;;;;:8;:13;;;;;;;;:41;;;;1107:14;;;;;:7;:14;;;;;1122:10;1107:26;;;;;;;:38;;1138:6;1107:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1078:14:13;;;;;;;:7;:14;;;;;;;;1093:10;1078:26;;;;;;;;:67;;;;1156:28;;;;;;;;;;;1078:14;;-1:-1:-1;;;;;;;;;;;1156:28:13;;;;;;;;;;-1:-1:-1;1197:4:13;736:470;;;;;:::o;829:97:12:-;719:5:3;;-1:-1:-1;;;;;719:5:3;705:10;:19;697:28;;;;;;890:31:12;901:6;909:11;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;909:11:12;;;890:10;:31::i;:::-;829:97;:::o;365:21:8:-;;;;;;:::o;2086:321:15:-;2205:4;-1:-1:-1;;;;;2227:20:15;;2242:4;2227:20;;2219:29;;;;;;2255:27;2270:3;2275:6;2255:14;:27::i;:::-;;2352:3;-1:-1:-1;;;;;2352:8:15;2367:9;2378:5;2352:32;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2352:32:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2344:41;;;;;;;;-1:-1:-1;2398:4:15;2086:321;;;;;:::o;936:312:11:-;1050:4;517:34:12;527:10;539:11;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;539:11:12;;;517:9;:34::i;:::-;593:15:11;;;;;;;592:16;584:25;;;;;;1079:12;;:25;;1096:7;1079:25;:16;:25;:::i;:::-;1064:12;:40;-1:-1:-1;;;;;1126:13:11;;;;;;:8;:13;;;;;;:26;;1144:7;1126:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;1110:13:11;;;;;;:8;:13;;;;;;;;;:42;;;;1163:18;;;;;;;1110:13;;1163:18;;;;;;;;;1192:34;;;;;;;;-1:-1:-1;;;;;1192:34:11;;;1209:1;;-1:-1:-1;;;;;;;;;;;1192:34:11;;;;;;;;-1:-1:-1;1239:4:11;936:312;;;;:::o;353:73:7:-;396:25;402:10;414:6;396:5;:25::i;3701:425:13:-;3842:10;3804:4;3834:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3834:29:13;;;;;;;;;;3873:27;;;3869:164;;;3918:10;3942:1;3910:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3910:29:13;;;;;;;;;:33;3869:164;;;3996:30;:8;4009:16;3996:30;:12;:30;:::i;:::-;3972:10;3964:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3964:29:13;;;;;;;;;:62;3869:164;4052:10;4074:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4043:61:13;;4074:29;;;;;;;;;;;4043:61;;;;;;;;;4052:10;4043:61;;;;;;;;;;;-1:-1:-1;4117:4:13;;3701:425;-1:-1:-1;;;3701:425:13:o;1131:99:6:-;-1:-1:-1;;;;;1209:16:6;1187:7;1209:16;;;:8;:16;;;;;;;1131:99::o;827:111:3:-;719:5;;-1:-1:-1;;;;;719:5:3;705:10;:19;697:28;;;;;;903:5;;884:25;;-1:-1:-1;;;;;903:5:3;;;;884:25;;903:5;;884:25;915:5;:18;;-1:-1:-1;;915:18:3;;;827:111::o;1362:140:11:-;719:5:3;;1421:4:11;;-1:-1:-1;;;;;719:5:3;705:10;:19;697:28;;;;;;593:15:11;;;;;;;592:16;584:25;;;;;;1433:15;:22;;-1:-1:-1;;1433:22:11;;;;;1466:14;;;;1433:22;;1466:14;-1:-1:-1;1493:4:11;1362:140;:::o;238:20:3:-;;;-1:-1:-1;;;;;238:20:3;;:::o;3875:365:15:-;4009:4;-1:-1:-1;;;;;4031:25:15;;4051:4;4031:25;;4023:34;;;;;;4064:45;4087:8;4097:11;4064:22;:45::i;349::12:-;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;349:45:12;;;;;:::o;341:20:8:-;;;;;;;;;;;;;;;-1:-1:-1;;341:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;648:91:12;719:5:3;;-1:-1:-1;;;;;719:5:3;705:10;:19;697:28;;;;;;706::12;714:6;722:11;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;722:11:12;;;706:7;:28::i;608:321:6:-;671:4;-1:-1:-1;;;;;691:17:6;;;;683:26;;;;;;742:10;733:20;;;;:8;:20;;;;;;723:30;;;715:39;;;;;;793:10;784:20;;;;:8;:20;;;;;;:32;;809:6;784:32;:24;:32;:::i;:::-;770:10;761:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;838:13:6;;;;;;:25;;856:6;838:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;822:13:6;;;;;;:8;:13;;;;;;;;;:41;;;;874:33;;;;;;;822:13;;883:10;;-1:-1:-1;;;;;;;;;;;874:33:6;;;;;;;;;-1:-1:-1;920:4:6;608:321;;;;:::o;408:73:0:-;;;;;;;;;;;;;;;-1:-1:-1;;408:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2891:347:15;3025:4;-1:-1:-1;;;;;3047:20:15;;3062:4;3047:20;;3039:29;;;;;;3075:38;3094:5;3101:3;3106:6;3075:18;:38::i;:::-;;3183:3;-1:-1:-1;;;;;3183:8:15;3198:9;3209:5;3183:32;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3183:32:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3175:41;;;;;;;;-1:-1:-1;3229:4:15;2891:347;;;;;;:::o;1304:340::-;1427:4;-1:-1:-1;;;;;1449:25:15;;1469:4;1449:25;;1441:34;;;;;;1482:31;1496:8;1506:6;1482:13;:31::i;4882:375::-;5021:4;-1:-1:-1;;;;;5043:25:15;;5063:4;5043:25;;5035:34;;;;;;5076:50;5099:8;5109:16;5076:22;:50::i;2946:293:13:-;3106:10;3044:4;3098:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3098:29:13;;;;;;;;;;:46;;3132:11;3098:46;:33;:46;:::i;:::-;3066:10;3058:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3058:29:13;;;;;;;;;;;;:87;;;3156:61;;;;;;3058:29;;3156:61;;;;;;;;;;;-1:-1:-1;3230:4:13;2946:293;;;;:::o;818:179:0:-;719:5:3;;915:12:0;;-1:-1:-1;;;;;719:5:3;705:10;:19;697:28;;;;;;977:5:0;;942:50;;;;;;-1:-1:-1;;;;;977:5:0;;;942:50;;;;;;;;;;;;:34;;;;;;:50;;;;;;;;;;;;;;;977:5;942:34;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;942:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;942:50:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;942:50:0;;818:179;-1:-1:-1;;;818:179:0:o;2336:153:13:-;-1:-1:-1;;;;;2459:15:13;;;2435:7;2459:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2336:153::o;1100:103:3:-;719:5;;-1:-1:-1;;;;;719:5:3;705:10;:19;697:28;;;;;;1169:29;1188:9;1169:18;:29::i;663:107:5:-;749:15;753:4;759;749:3;:15::i;:::-;741:24;;;;;;;848:124;-1:-1:-1;;;;;950:17:5;929:4;950:17;;;;;;;;;;;;;;;848:124::o;1042:110:2:-;1100:7;1122:6;;;;1115:14;;;;-1:-1:-1;1142:5:2;;;1042:110::o;1214:123::-;1293:5;;;1311:6;;;;1304:14;;;;1214:123;;;;:::o;1697:143:4:-;1769:28;1792:4;1769:5;1775:8;1769:15;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1769:15:4;;;;;-1:-1:-1;1769:15:4;;;;;;;;;;;;-1:-1:-1;;1769:22:4;:28::i;:::-;1808:27;1820:4;1826:8;1808:27;;;;-1:-1:-1;;;;;1808:27:4;-1:-1:-1;;;;;1808:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1808:27:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:143;;:::o;430:438:7:-;-1:-1:-1;;;;;508:14:7;;;;;;:8;:14;;;;;;498:24;;;490:33;;;;;;-1:-1:-1;;;;;718:14:7;;;;;;:8;:14;;;;;;:26;;737:6;718:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;701:14:7;;;;;;:8;:14;;;;;:43;765:12;;:24;;782:6;765:24;:16;:24;:::i;:::-;750:12;:39;800:18;;;;;;;;-1:-1:-1;;;;;800:18:7;;;;;;;;;;;;;829:34;;;;;;;;852:1;;-1:-1:-1;;;;;829:34:7;;;-1:-1:-1;;;;;;;;;;;829:34:7;;;;;;;;430:438;;:::o;1439:135:4:-;1508:25;1528:4;1508:5;1514:8;1508:15;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1508:15:4;;;;;-1:-1:-1;1508:15:4;;;;;;;;;;;;-1:-1:-1;;1508:19:4;:25::i;:::-;1544;1554:4;1560:8;1544:25;;;;-1:-1:-1;;;;;1544:25:4;-1:-1:-1;;;;;1544:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1338:171:3;-1:-1:-1;;;;;1408:23:3;;;;1400:32;;;;;;1464:5;;1443:38;;-1:-1:-1;;;;;1443:38:3;;;;1464:5;;1443:38;;1464:5;;1443:38;1487:5;:17;;-1:-1:-1;;1487:17:3;-1:-1:-1;;;;;1487:17:3;;;;;;;;;;1338:171::o;487:100:5:-;-1:-1:-1;;;;;557:17:5;577:5;557:17;;;;;;;;;;;:25;;-1:-1:-1;;557:25:5;;;487:100::o;326:96::-;-1:-1:-1;;;;;393:17:5;:11;:17;;;;;;;;;;;:24;;-1:-1:-1;;393:24:5;413:4;393:24;;;326:96::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC827/ERC827Token.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/RBACMintableToken.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol\";\n\n\ncontract ERC20Token is DetailedERC20, ERC827Token, RBACMintableToken, BurnableToken {\n\n  string public builtOn = \"https://vittominacori.github.io/erc20-generator\";\n\n  constructor(\n    string _name,\n    string _symbol,\n    uint8 _decimals,\n    uint256 _initialAmount\n  )\n  DetailedERC20 (_name, _symbol, _decimals)\n  public\n  {\n    if (_initialAmount > 0) {\n      balances[owner] = _initialAmount * (10 ** uint256(decimals));\n      totalSupply_ = balances[owner];\n    }\n\n    addMinter(owner);\n  }\n\n  function transferAnyERC20Token(address _tokenAddress, uint256 _tokens) onlyOwner public returns (bool success) {\n    return ERC20Basic(_tokenAddress).transfer(owner, _tokens);\n  }\n}\n",
  "sourcePath": "/Users/vittominacori/Projects/vittominacori.github.io/erc20-generator/smart-contracts/contracts/ERC20Token.sol",
  "ast": {
    "absolutePath": "/Users/vittominacori/Projects/vittominacori.github.io/erc20-generator/smart-contracts/contracts/ERC20Token.sol",
    "exportedSymbols": {
      "ERC20Token": [
        82
      ]
    },
    "id": 83,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 83,
        "sourceUnit": 699,
        "src": "26:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC827/ERC827Token.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC827/ERC827Token.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 83,
        "sourceUnit": 1428,
        "src": "98:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/RBACMintableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/RBACMintableToken.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 83,
        "sourceUnit": 928,
        "src": "169:75:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 83,
        "sourceUnit": 665,
        "src": "245:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "DetailedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 698,
              "src": "342:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetailedERC20_$698",
                "typeString": "contract DetailedERC20"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "342:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "ERC827Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1427,
              "src": "357:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC827Token_$1427",
                "typeString": "contract ERC827Token"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "357:11:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "RBACMintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 927,
              "src": "370:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RBACMintableToken_$927",
                "typeString": "contract RBACMintableToken"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "370:17:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "BurnableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 664,
              "src": "389:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnableToken_$664",
                "typeString": "contract BurnableToken"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "389:13:0"
          }
        ],
        "contractDependencies": [
          320,
          427,
          593,
          664,
          698,
          741,
          773,
          879,
          927,
          1174,
          1215,
          1427
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 82,
        "linearizedBaseContracts": [
          82,
          664,
          927,
          427,
          879,
          320,
          1427,
          1174,
          593,
          1215,
          698,
          741,
          773
        ],
        "name": "ERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 16,
            "name": "builtOn",
            "nodeType": "VariableDeclaration",
            "scope": 82,
            "src": "408:73:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 14,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "408:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "68747470733a2f2f766974746f6d696e61636f72692e6769746875622e696f2f65726332302d67656e657261746f72",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "432:49:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d699d94e432732754321d065f2307365908e9ae0fe6e1ba925fd83c3d2369543",
                "typeString": "literal_string \"https://vittominacori.github.io/erc20-generator\""
              },
              "value": "https://vittominacori.github.io/erc20-generator"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "644:170:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "_initialAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "654:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "671:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "654:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 55,
                  "nodeType": "IfStatement",
                  "src": "650:137:0",
                  "trueBody": {
                    "id": 54,
                    "nodeType": "Block",
                    "src": "674:113:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 35,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "682:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 37,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 36,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 238,
                              "src": "691:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "682:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 38,
                              "name": "_initialAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "700:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 43,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 39,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "718:2:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 41,
                                        "name": "decimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 675,
                                        "src": "732:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 40,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "724:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": "uint256"
                                    },
                                    "id": 42,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "724:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "718:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 44,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "717:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "700:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "682:60:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 47,
                        "nodeType": "ExpressionStatement",
                        "src": "682:60:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 48,
                            "name": "totalSupply_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "750:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 49,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "765:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 51,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 50,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 238,
                              "src": "774:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "765:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "750:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53,
                        "nodeType": "ExpressionStatement",
                        "src": "750:30:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "803:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56,
                      "name": "addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 913,
                      "src": "793:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "793:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "793:16:0"
                }
              ]
            },
            "documentation": null,
            "id": 61,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 27,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18,
                    "src": "606:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 28,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20,
                    "src": "613:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 29,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22,
                    "src": "622:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 30,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 26,
                  "name": "DetailedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 698,
                  "src": "591:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DetailedERC20_$698_$",
                    "typeString": "type(contract DetailedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "591:41:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "503:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "521:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "541:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "name": "_initialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "562:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "497:91:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:0"
            },
            "scope": 82,
            "src": "486:328:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "929:68:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "977:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "984:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "953:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 72,
                          "name": "ERC20Basic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "942:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Basic_$773_$",
                            "typeString": "type(contract ERC20Basic)"
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "942:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$773",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 764,
                      "src": "942:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 71,
                  "id": 79,
                  "nodeType": "Return",
                  "src": "935:57:0"
                }
              ]
            },
            "documentation": null,
            "id": 81,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 68,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 67,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 268,
                  "src": "889:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "889:9:0"
              }
            ],
            "name": "transferAnyERC20Token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "849:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "872:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "848:40:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "915:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "914:14:0"
            },
            "scope": 82,
            "src": "818:179:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 83,
        "src": "319:680:0"
      }
    ],
    "src": "0:1000:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/vittominacori/Projects/vittominacori.github.io/erc20-generator/smart-contracts/contracts/ERC20Token.sol",
    "exportedSymbols": {
      "ERC20Token": [
        82
      ]
    },
    "id": 83,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 83,
        "sourceUnit": 699,
        "src": "26:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC827/ERC827Token.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC827/ERC827Token.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 83,
        "sourceUnit": 1428,
        "src": "98:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/RBACMintableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/RBACMintableToken.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 83,
        "sourceUnit": 928,
        "src": "169:75:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 83,
        "sourceUnit": 665,
        "src": "245:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "DetailedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 698,
              "src": "342:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DetailedERC20_$698",
                "typeString": "contract DetailedERC20"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "342:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "ERC827Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1427,
              "src": "357:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC827Token_$1427",
                "typeString": "contract ERC827Token"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "357:11:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "RBACMintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 927,
              "src": "370:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RBACMintableToken_$927",
                "typeString": "contract RBACMintableToken"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "370:17:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "BurnableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 664,
              "src": "389:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BurnableToken_$664",
                "typeString": "contract BurnableToken"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "389:13:0"
          }
        ],
        "contractDependencies": [
          320,
          427,
          593,
          664,
          698,
          741,
          773,
          879,
          927,
          1174,
          1215,
          1427
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 82,
        "linearizedBaseContracts": [
          82,
          664,
          927,
          427,
          879,
          320,
          1427,
          1174,
          593,
          1215,
          698,
          741,
          773
        ],
        "name": "ERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 16,
            "name": "builtOn",
            "nodeType": "VariableDeclaration",
            "scope": 82,
            "src": "408:73:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 14,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "408:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "68747470733a2f2f766974746f6d696e61636f72692e6769746875622e696f2f65726332302d67656e657261746f72",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "432:49:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d699d94e432732754321d065f2307365908e9ae0fe6e1ba925fd83c3d2369543",
                "typeString": "literal_string \"https://vittominacori.github.io/erc20-generator\""
              },
              "value": "https://vittominacori.github.io/erc20-generator"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "644:170:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "_initialAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "654:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "671:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "654:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 55,
                  "nodeType": "IfStatement",
                  "src": "650:137:0",
                  "trueBody": {
                    "id": 54,
                    "nodeType": "Block",
                    "src": "674:113:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 35,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "682:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 37,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 36,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 238,
                              "src": "691:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "682:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 38,
                              "name": "_initialAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "700:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 43,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 39,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "718:2:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 41,
                                        "name": "decimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 675,
                                        "src": "732:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 40,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "724:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": "uint256"
                                    },
                                    "id": 42,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "724:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "718:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 44,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "717:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "700:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "682:60:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 47,
                        "nodeType": "ExpressionStatement",
                        "src": "682:60:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 48,
                            "name": "totalSupply_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "750:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 49,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "765:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 51,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 50,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 238,
                              "src": "774:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "765:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "750:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53,
                        "nodeType": "ExpressionStatement",
                        "src": "750:30:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "803:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56,
                      "name": "addMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 913,
                      "src": "793:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "793:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "793:16:0"
                }
              ]
            },
            "documentation": null,
            "id": 61,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 27,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18,
                    "src": "606:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 28,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20,
                    "src": "613:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 29,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22,
                    "src": "622:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 30,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 26,
                  "name": "DetailedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 698,
                  "src": "591:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_DetailedERC20_$698_$",
                    "typeString": "type(contract DetailedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "591:41:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "503:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "521:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "541:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "name": "_initialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "562:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "497:91:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:0"
            },
            "scope": 82,
            "src": "486:328:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "929:68:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "977:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "984:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "953:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 72,
                          "name": "ERC20Basic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "942:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Basic_$773_$",
                            "typeString": "type(contract ERC20Basic)"
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "942:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Basic_$773",
                          "typeString": "contract ERC20Basic"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 764,
                      "src": "942:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 71,
                  "id": 79,
                  "nodeType": "Return",
                  "src": "935:57:0"
                }
              ]
            },
            "documentation": null,
            "id": 81,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 68,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 67,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 268,
                  "src": "889:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "889:9:0"
              }
            ],
            "name": "transferAnyERC20Token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "849:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "872:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "848:40:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "915:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "914:14:0"
            },
            "scope": 82,
            "src": "818:179:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 83,
        "src": "319:680:0"
      }
    ],
    "src": "0:1000:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-14T12:18:07.403Z"
}